Inspecting 99 files
CECWW.WCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC...CC.CC.WCCCC.CC.WCCCCCCCCCCCCCCCC..C.CC......C....

Offenses:

Gemfile:3:1: C: Extra blank line detected.
Gemfile:26:81: C: Line is too long. [128/80]
# Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:37:1: C: Missing space after #.
#gem 'unicorn'
^^^^^^^^^^^^^^
Gemfile:49:5: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
gem "puma"
    ^^^^^^
Gemfile:50:16: C: Trailing whitespace detected.
gem 'passenger' 
               ^
forwardToBitnami.rb:5:11: E: unexpected token tIDENTIFIER
chmod 400 bitnami-hosting.cer
          ^^^^^^^
forwardToBitnami.rb:10:5: W: `-' interpreted as argument prefix
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
    ^
forwardToBitnami.rb:10:8: W: `-' interpreted as argument prefix
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
       ^
forwardToBitnami.rb:10:8: E: unexpected token tUMINUS
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
       ^
forwardToBitnami.rb:10:21: E: no .<digit> floating literal anymore; put 0 before dot
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                    ^^
forwardToBitnami.rb:10:23: E: no .<digit> floating literal anymore; put 0 before dot
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                      ^^
forwardToBitnami.rb:10:36: E: unexpected token tIDENTIFIER
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                   ^^^^^^^
forwardToBitnami.rb:10:56: W: `-' interpreted as argument prefix
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                       ^
forwardToBitnami.rb:10:56: E: unexpected token tUMINUS
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                       ^
forwardToBitnami.rb:10:92: E: `@54' is not allowed as an instance variable name
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                                                           ^^^
forwardToBitnami.rb:10:95: E: no .<digit> floating literal anymore; put 0 before dot
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                                                              ^^^^
forwardToBitnami.rb:10:99: E: no .<digit> floating literal anymore; put 0 before dot
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                                                                  ^^^^
forwardToBitnami.rb:10:103: E: no .<digit> floating literal anymore; put 0 before dot
ssh -N -L 3307:127.0.0.1:3306 -i ./bitnami-hosting.cer -o "StrictHostKeyChecking no" ubuntu@54.148.183.206 &
                                                                                                      ^^^^
forwardToBitnami.rb:11:1: E: unexpected token $end
Rakefile:2:81: C: Line is too long. [90/80]
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.
                                                                                ^^^^^^^^^^
Rakefile:7:7: C: Trailing whitespace detected.
# Test 
      ^
Rakefile:7:8: C: Final newline missing.
# Test 
       
bin/spring:7:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "rubygems"
          ^^^^^^^^^^
bin/spring:8:11: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  require "bundler"
          ^^^^^^^^^
bin/spring:10:12: W: Assignment in condition - you probably meant to use ==.
  if match = Bundler.default_lockfile.read.match(/^GEM$.*?^    spring \((.*?)\)$.*?^$/m)
           ^
bin/spring:10:81: C: Line is too long. [88/80]
  if match = Bundler.default_lockfile.read.match(/^GEM$.*?^    spring \((.*?)\)$.*?^$/m)
                                                                                ^^^^^^^^
bin/spring:11:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_PATH"] = ([Bundler.bundle_path.to_s] + Gem.path).join(File::PATH_SEPARATOR)
        ^^^^^^^^^^
bin/spring:11:81: C: Line is too long. [88/80]
    ENV["GEM_PATH"] = ([Bundler.bundle_path.to_s] + Gem.path).join(File::PATH_SEPARATOR)
                                                                                ^^^^^^^^
bin/spring:12:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_HOME"] = ""
        ^^^^^^^^^^
bin/spring:12:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    ENV["GEM_HOME"] = ""
                      ^^
bin/spring:15:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    gem "spring", match[1]
        ^^^^^^^^
bin/spring:16:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    require "spring/binstub"
            ^^^^^^^^^^^^^^^^
bin/rails:3:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load File.expand_path("../spring", __FILE__)
                        ^^^^^^^^^^^
bin/rails:4:1: W: Do not suppress exceptions.
rescue LoadError
^^^^^^^^^^^^^^^^
bin/rake:3:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  load File.expand_path("../spring", __FILE__)
                        ^^^^^^^^^^^
bin/rake:4:1: W: Do not suppress exceptions.
rescue LoadError
^^^^^^^^^^^^^^^^
lib/tasks/forward_ports.rake:2:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  desc "Opens an SSH tunnel to our database on bitnami."
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
lib/tasks/forward_ports.rake:4:81: C: Line is too long. [86/80]
    `ssh -N -L 3306:127.0.0.1:3306 -i ../../bitnami-hosting.cer ubuntu@54.148.183.206`
                                                                                ^^^^^^
lib/tasks/forward_ports.rake:6:1: C: Extra empty line detected at block body end.
db/schema.rb:4:81: C: Line is too long. [81/80]
# incrementally modify your database, and then regenerate this schema definition.
                                                                                ^
db/schema.rb:9:81: C: Line is too long. [86/80]
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
                                                                                ^^^^^^
db/schema.rb:12:81: C: Line is too long. [86/80]
# It's strongly recommended that you check this file into your version control system.
                                                                                ^^^^^^
db/schema.rb:14:38: C: Separate every 3 digits in the integer portion of a number with underscores(_).
ActiveRecord::Schema.define(version: 20141207030344) do
                                     ^^^^^^^^^^^^^^
db/schema.rb:15:1: C: Extra empty line detected at block body beginning.
db/schema.rb:16:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "colis", force: true do |t|
               ^^^^^^^
db/schema.rb:17:12: C: Put one space between the method name and the first argument.
    t.float    "cost_of_living", limit: 24
           ^^^^
db/schema.rb:17:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "cost_of_living", limit: 24
               ^^^^^^^^^^^^^^^^
db/schema.rb:18:12: C: Put one space between the method name and the first argument.
    t.float    "transportation", limit: 24
           ^^^^
db/schema.rb:18:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "transportation", limit: 24
               ^^^^^^^^^^^^^^^^
db/schema.rb:19:12: C: Put one space between the method name and the first argument.
    t.float    "groceries",      limit: 24
           ^^^^
db/schema.rb:19:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "groceries",      limit: 24
               ^^^^^^^^^^^
db/schema.rb:20:12: C: Put one space between the method name and the first argument.
    t.float    "goods",          limit: 24
           ^^^^
db/schema.rb:20:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "goods",          limit: 24
               ^^^^^^^
db/schema.rb:21:12: C: Put one space between the method name and the first argument.
    t.float    "health_care",    limit: 24
           ^^^^
db/schema.rb:21:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "health_care",    limit: 24
               ^^^^^^^^^^^^^
db/schema.rb:22:12: C: Put one space between the method name and the first argument.
    t.float    "utilities",      limit: 24
           ^^^^
db/schema.rb:22:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "utilities",      limit: 24
               ^^^^^^^^^^^
db/schema.rb:23:12: C: Put one space between the method name and the first argument.
    t.float    "housing",        limit: 24
           ^^^^
db/schema.rb:23:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "housing",        limit: 24
               ^^^^^^^^^
db/schema.rb:24:13: C: Put one space between the method name and the first argument.
    t.string   "location"
            ^^^
db/schema.rb:24:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "location"
               ^^^^^^^^^^
db/schema.rb:25:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:26:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:27:12: C: Put one space between the method name and the first argument.
    t.float    "unemp_rate",     limit: 24
           ^^^^
db/schema.rb:27:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "unemp_rate",     limit: 24
               ^^^^^^^^^^^^
db/schema.rb:28:12: C: Put one space between the method name and the first argument.
    t.float    "unemp_trend",    limit: 24
           ^^^^
db/schema.rb:28:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "unemp_trend",    limit: 24
               ^^^^^^^^^^^^^
db/schema.rb:29:12: C: Put one space between the method name and the first argument.
    t.float    "income",         limit: 24
           ^^^^
db/schema.rb:29:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "income",         limit: 24
               ^^^^^^^^
db/schema.rb:30:12: C: Put one space between the method name and the first argument.
    t.float    "income_tax",     limit: 24
           ^^^^
db/schema.rb:30:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "income_tax",     limit: 24
               ^^^^^^^^^^^^
db/schema.rb:31:12: C: Put one space between the method name and the first argument.
    t.float    "sales_tax",      limit: 24
           ^^^^
db/schema.rb:31:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "sales_tax",      limit: 24
               ^^^^^^^^^^^
db/schema.rb:32:12: C: Put one space between the method name and the first argument.
    t.float    "property_tax",   limit: 24
           ^^^^
db/schema.rb:32:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "property_tax",   limit: 24
               ^^^^^^^^^^^^^^
db/schema.rb:35:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "colis", ["location"], name: "location_UNIQUE", unique: true, using: :btree
            ^^^^^^^
db/schema.rb:35:23: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "colis", ["location"], name: "location_UNIQUE", unique: true, using: :btree
                      ^^^^^^^^^^
db/schema.rb:35:42: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "colis", ["location"], name: "location_UNIQUE", unique: true, using: :btree
                                         ^^^^^^^^^^^^^^^^^
db/schema.rb:35:81: C: Line is too long. [87/80]
  add_index "colis", ["location"], name: "location_UNIQUE", unique: true, using: :btree
                                                                                ^^^^^^^
db/schema.rb:37:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "completeds", force: true do |t|
               ^^^^^^^^^^^^
db/schema.rb:38:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id"
             ^^
db/schema.rb:38:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id"
               ^^^^^^^^^
db/schema.rb:39:13: C: Put one space between the method name and the first argument.
    t.string   "section"
            ^^^
db/schema.rb:39:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "section"
               ^^^^^^^^^
db/schema.rb:40:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:41:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:44:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "queries", force: true do |t|
               ^^^^^^^^^
db/schema.rb:45:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id"
             ^^
db/schema.rb:45:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id"
               ^^^^^^^^^
db/schema.rb:46:13: C: Put one space between the method name and the first argument.
    t.string   "url"
            ^^^
db/schema.rb:46:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "url"
               ^^^^^
db/schema.rb:47:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:48:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:51:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "scalars", force: true do |t|
               ^^^^^^^^^
db/schema.rb:52:14: C: Put one space between the method name and the first argument.
    t.integer  "user_id"
             ^^
db/schema.rb:52:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "user_id"
               ^^^^^^^^^
db/schema.rb:53:12: C: Put one space between the method name and the first argument.
    t.float    "misc",           limit: 24
           ^^^^
db/schema.rb:53:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "misc",           limit: 24
               ^^^^^^
db/schema.rb:54:12: C: Put one space between the method name and the first argument.
    t.float    "housing",        limit: 24
           ^^^^
db/schema.rb:54:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "housing",        limit: 24
               ^^^^^^^^^
db/schema.rb:55:12: C: Put one space between the method name and the first argument.
    t.float    "books",          limit: 24
           ^^^^
db/schema.rb:55:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "books",          limit: 24
               ^^^^^^^
db/schema.rb:56:12: C: Put one space between the method name and the first argument.
    t.float    "insurance",      limit: 24
           ^^^^
db/schema.rb:56:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "insurance",      limit: 24
               ^^^^^^^^^^^
db/schema.rb:57:12: C: Put one space between the method name and the first argument.
    t.float    "utilities",      limit: 24
           ^^^^
db/schema.rb:57:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "utilities",      limit: 24
               ^^^^^^^^^^^
db/schema.rb:58:13: C: Put one space between the method name and the first argument.
    t.string   "type"
            ^^^
db/schema.rb:58:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "type"
               ^^^^^^
db/schema.rb:59:13: C: Put one space between the method name and the first argument.
    t.string   "name"
            ^^^
db/schema.rb:59:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "name"
               ^^^^^^
db/schema.rb:60:12: C: Put one space between the method name and the first argument.
    t.float    "food",           limit: 24
           ^^^^
db/schema.rb:60:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "food",           limit: 24
               ^^^^^^
db/schema.rb:61:12: C: Put one space between the method name and the first argument.
    t.float    "savings",        limit: 24
           ^^^^
db/schema.rb:61:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "savings",        limit: 24
               ^^^^^^^^^
db/schema.rb:62:12: C: Put one space between the method name and the first argument.
    t.float    "loans",          limit: 24
           ^^^^
db/schema.rb:62:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "loans",          limit: 24
               ^^^^^^^
db/schema.rb:63:12: C: Put one space between the method name and the first argument.
    t.float    "tuition",        limit: 24
           ^^^^
db/schema.rb:63:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "tuition",        limit: 24
               ^^^^^^^^^
db/schema.rb:64:12: C: Put one space between the method name and the first argument.
    t.float    "healthcare",     limit: 24
           ^^^^
db/schema.rb:64:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "healthcare",     limit: 24
               ^^^^^^^^^^^^
db/schema.rb:65:12: C: Put one space between the method name and the first argument.
    t.float    "debt",           limit: 24
           ^^^^
db/schema.rb:65:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "debt",           limit: 24
               ^^^^^^
db/schema.rb:66:12: C: Put one space between the method name and the first argument.
    t.float    "transportation", limit: 24
           ^^^^
db/schema.rb:66:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "transportation", limit: 24
               ^^^^^^^^^^^^^^^^
db/schema.rb:67:14: C: Put one space between the method name and the first argument.
    t.boolean  "public"
             ^^
db/schema.rb:67:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.boolean  "public"
               ^^^^^^^^
db/schema.rb:68:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:69:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:72:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: true do |t|
               ^^^^^^^
db/schema.rb:73:12: C: Put one space between the method name and the first argument.
    t.float    "debt",       limit: 24
           ^^^^
db/schema.rb:73:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "debt",       limit: 24
               ^^^^^^
db/schema.rb:74:12: C: Put one space between the method name and the first argument.
    t.float    "books",      limit: 24
           ^^^^
db/schema.rb:74:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "books",      limit: 24
               ^^^^^^^
db/schema.rb:75:12: C: Put one space between the method name and the first argument.
    t.float    "savings",    limit: 24
           ^^^^
db/schema.rb:75:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "savings",    limit: 24
               ^^^^^^^^^
db/schema.rb:76:13: C: Put one space between the method name and the first argument.
    t.string   "email"
            ^^^
db/schema.rb:76:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "email"
               ^^^^^^^
db/schema.rb:77:13: C: Put one space between the method name and the first argument.
    t.string   "password"
            ^^^
db/schema.rb:77:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "password"
               ^^^^^^^^^^
db/schema.rb:78:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:79:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:82:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "weather_records", force: true do |t|
               ^^^^^^^^^^^^^^^^^
db/schema.rb:83:12: C: Put one space between the method name and the first argument.
    t.float    "high",       limit: 24
           ^^^^
db/schema.rb:83:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "high",       limit: 24
               ^^^^^^
db/schema.rb:84:12: C: Put one space between the method name and the first argument.
    t.float    "low",        limit: 24
           ^^^^
db/schema.rb:84:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "low",        limit: 24
               ^^^^^
db/schema.rb:85:12: C: Put one space between the method name and the first argument.
    t.float    "average",    limit: 24
           ^^^^
db/schema.rb:85:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.float    "average",    limit: 24
               ^^^^^^^^^
db/schema.rb:86:14: C: Put one space between the method name and the first argument.
    t.integer  "coli_id"
             ^^
db/schema.rb:86:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer  "coli_id"
               ^^^^^^^^^
db/schema.rb:87:13: C: Put one space between the method name and the first argument.
    t.string   "month",      limit: 10, null: false
            ^^^
db/schema.rb:87:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string   "month",      limit: 10, null: false
               ^^^^^^^
db/schema.rb:88:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at"
               ^^^^^^^^^^^^
db/schema.rb:89:16: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at"
               ^^^^^^^^^^^^
db/schema.rb:92:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "weather_records", ["coli_id"], name: "index_weather_records_on_coli_id", using: :btree
            ^^^^^^^^^^^^^^^^^
db/schema.rb:92:33: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "weather_records", ["coli_id"], name: "index_weather_records_on_coli_id", using: :btree
                                ^^^^^^^^^
db/schema.rb:92:51: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  add_index "weather_records", ["coli_id"], name: "index_weather_records_on_coli_id", using: :btree
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:92:81: C: Line is too long. [99/80]
  add_index "weather_records", ["coli_id"], name: "index_weather_records_on_coli_id", using: :btree
                                                                                ^^^^^^^^^^^^^^^^^^^
db/schema.rb:93:1: C: Extra empty line detected at block body end.
db/seeds.rb:1:81: C: Line is too long. [103/80]
# This file should contain all the record creation needed to seed the database with its default values.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:2:81: C: Line is too long. [96/80]
# The data can then be loaded with the rake db:seed (or created alongside the db with db:setup).
                                                                                ^^^^^^^^^^^^^^^^
db/migrate/20141121181404_add_transportation_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddTransportationToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121181046_add_cost_of_living_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddCostOfLivingToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141124181757_add_housing_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddHousingToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141124181757_add_housing_to_coli.rb:4:81: C: Line is too long. [84/80]
    add_column :colis, :housing, :float unless Coli.column_names.include?('housing')
                                                                                ^^^^
db/migrate/20141124181757_add_housing_to_coli.rb:9:81: C: Line is too long. [83/80]
    remove_column :colis, :housing, :float if Coli.column_names.include?('housing')
                                                                                ^^^
db/migrate/20141121182858_add_utilities_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddUtilitiesToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141126180127_add_createdat_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddCreatedatToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141125004156_add_month_to_weather_record.rb:1:1: C: Missing top-level class documentation comment.
class AddMonthToWeatherRecord < ActiveRecord::Migration
^^^^^
db/migrate/20141125004156_add_month_to_weather_record.rb:4:81: C: Line is too long. [100/80]
    add_column :weather_records, :month, :string unless WeatherRecord.column_names.include?('month')
                                                                                ^^^^^^^^^^^^^^^^^^^^
db/migrate/20141125004156_add_month_to_weather_record.rb:9:81: C: Line is too long. [99/80]
    remove_column :weather_records, :month, :string if WeatherRecord.column_names.include?('month')
                                                                                ^^^^^^^^^^^^^^^^^^^
db/migrate/20141122051137_create_queries.rb:1:1: C: Missing top-level class documentation comment.
class CreateQueries < ActiveRecord::Migration
^^^^^
db/migrate/20141121180707_remove_overall_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveOverallFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122051702_create_scalars.rb:1:1: C: Missing top-level class documentation comment.
class CreateScalars < ActiveRecord::Migration
^^^^^
db/migrate/20141122051702_create_scalars.rb:2:3: C: Assignment Branch Condition size for change is too high. [19/15]
  def change
  ^^^
db/migrate/20141122051702_create_scalars.rb:2:3: C: Method has too many lines. [20/10]
  def change
  ^^^
db/migrate/20141122040007_add_coli_id_to_weather_records.rb:1:1: C: Missing top-level class documentation comment.
class AddColiIdToWeatherRecords < ActiveRecord::Migration
^^^^^
db/migrate/20141121182558_remove_health_care_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveHealthCareFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141207030344_add_property_tax_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddPropertyTaxToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122003744_remove_city_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveCityFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122031136_add_location_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddLocationToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121182137_remove_goods_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveGoodsFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122003827_remove_state_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveStateFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122022157_drop_location.rb:1:1: C: Missing top-level class documentation comment.
class DropLocation < ActiveRecord::Migration
^^^^^
db/migrate/20141122012158_add_location_to_weather_record.rb:1:1: C: Missing top-level class documentation comment.
class AddLocationToWeatherRecord < ActiveRecord::Migration
^^^^^
db/migrate/20141207030255_add_income_tax_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddIncomeTaxToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121175922_add_fields_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddFieldsToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121181345_remove_transportation_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveTransportationFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122005106_create_weather_records.rb:1:1: C: Missing top-level class documentation comment.
class CreateWeatherRecords < ActiveRecord::Migration
^^^^^
db/migrate/20141121182637_add_health_care_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddHealthCareToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121182205_add_goods_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddGoodsToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122051216_create_completeds.rb:1:1: C: Missing top-level class documentation comment.
class CreateCompleteds < ActiveRecord::Migration
^^^^^
db/migrate/20141126180219_add_createdat_to_weather_record.rb:1:1: C: Missing top-level class documentation comment.
class AddCreatedatToWeatherRecord < ActiveRecord::Migration
^^^^^
db/migrate/20141126180159_add_updatedat_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddUpdatedatToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121181557_add_groceries_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddGroceriesToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141126180242_add_updatedat_to_weather_record.rb:1:1: C: Missing top-level class documentation comment.
class AddUpdatedatToWeatherRecord < ActiveRecord::Migration
^^^^^
db/migrate/20141121182049_remove_housing_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveHousingFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121182825_remove_utilities_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveUtilitiesFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141121181538_remove_food_from_coli.rb:1:1: C: Missing top-level class documentation comment.
class RemoveFoodFromColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122051014_create_users.rb:1:1: C: Missing top-level class documentation comment.
class CreateUsers < ActiveRecord::Migration
^^^^^
db/migrate/20141121062747_create_colis.rb:1:1: C: Missing top-level class documentation comment.
class CreateColis < ActiveRecord::Migration
^^^^^
db/migrate/20141121180821_add_cost_of_living_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddCostOfLivingColi < ActiveRecord::Migration
^^^^^
db/migrate/20141207030326_add_sales_tax_to_coli.rb:1:1: C: Missing top-level class documentation comment.
class AddSalesTaxToColi < ActiveRecord::Migration
^^^^^
db/migrate/20141122222718_remove_query_from_query.rb:1:1: C: Missing top-level class documentation comment.
class RemoveQueryFromQuery < ActiveRecord::Migration
^^^^^
config/initializers/assets.rb:7:81: C: Line is too long. [93/80]
# application.js, application.css, and all non-JS/CSS in app/assets folder are already added.
                                                                                ^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:3:81: C: Line is too long. [107/80]
# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:6:81: C: Line is too long. [112/80]
# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/wrap_parameters.rb:6:81: C: Line is too long. [96/80]
# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
                                                                                ^^^^^^^^^^^^^^^^
config/initializers/cookies_serializer.rb:3:68: C: Final newline missing.
Rails.application.config.action_dispatch.cookies_serializer = :json
                                                                   
config/unicorn.rb:13:47: C: Use the new Ruby 1.9 hash syntax.
listen "#{app_dir}/tmp/sockets/unicorn.sock", :backlog => 64
                                              ^^^^^^^^^^^
config/unicorn.rb:23:32: C: Use && instead of and.
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!
                               ^^^
config/unicorn.rb:25:11: W: File.exists? is deprecated in favor of File.exist?.
  if File.exists?(old_pid) && server.pid != old_pid
          ^^^^^^^
config/unicorn.rb:29:5: W: Do not suppress exceptions.
    rescue Errno::ENOENT, Errno::ESRCH
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/unicorn.rb:35:16: W: Unused block argument - server. You can omit all the arguments if you don't care about them.
after_fork do |server, worker|
               ^^^^^^
config/unicorn.rb:35:24: W: Unused block argument - worker. You can omit all the arguments if you don't care about them.
after_fork do |server, worker|
                       ^^^^^^
config/unicorn.rb:36:32: C: Use && instead of and.
  defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection
                               ^^^
config/unicorn.rb:39:17: W: Unused block argument - server. You can omit the argument if you don't care about it.
before_exec do |server|
                ^^^^^^
config/unicorn.rb:41:4: C: Final newline missing.
end
   
config/environments/test.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/development.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/production.rb:2:81: C: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/production.rb:19:81: C: Line is too long. [104/80]
  # For large-scale production use, consider using a caching reverse proxy like nginx, varnish or squid.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:35:81: C: Line is too long. [102/80]
  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:41:81: C: Line is too long. [96/80]
  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
                                                                                ^^^^^^^^^^^^^^^^
config/environments/production.rb:60:81: C: Line is too long. [100/80]
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
                                                                                ^^^^^^^^^^^^^^^^^^^^
config/application.rb:11:81: C: Line is too long. [82/80]
    # Settings in config/environments/* take precedence over those specified here.
                                                                                ^^
config/application.rb:15:81: C: Line is too long. [99/80]
    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.
                                                                                ^^^^^^^^^^^^^^^^^^^
config/application.rb:16:81: C: Line is too long. [89/80]
    # Run "rake -D time" for a list of tasks for finding time zone names. Default is UTC.
                                                                                ^^^^^^^^^
config/application.rb:19:81: C: Line is too long. [98/80]
    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.
                                                                                ^^^^^^^^^^^^^^^^^^
config/application.rb:20:81: C: Line is too long. [87/80]
    # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]
                                                                                ^^^^^^^
config/routes.rb:17:81: C: Line is too long. [84/80]
  # The priority is based upon order of creation: first created -> highest priority.
                                                                                ^^^^
config/routes.rb:29:81: C: Line is too long. [81/80]
  # Example resource route (maps HTTP verbs to controller actions automatically):
                                                                                ^
config/routes.rb:73:1: C: Tab detected.
			get  'coli/' => 'coli#index'
^^^
config/routes.rb:73:4: C: Use 2 (not -1) spaces for indentation.
			get  'coli/' => 'coli#index'
   ^
config/routes.rb:73:7: C: Put one space between the method name and the first argument.
			get  'coli/' => 'coli#index'
      ^^
config/routes.rb:74:7: C: Inconsistent indentation detected.
      post 'coli/' => 'coli#show'
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/info_controller.rb:1:1: C: Missing top-level class documentation comment.
class InfoController < ApplicationController
^^^^^
app/controllers/info_controller.rb:2:1: C: Use 2 (not 1) spaces for indentation.
	def examples
^
app/controllers/info_controller.rb:2:1: C: Tab detected.
	def examples
^
app/controllers/info_controller.rb:3:1: C: Tab detected.
	end
^
app/controllers/info_controller.rb:4:1: C: Tab detected.
	def help
^
app/controllers/info_controller.rb:4:2: C: Use empty lines between defs.
	def help
 ^^^
app/controllers/info_controller.rb:5:1: C: Tab detected.
	end
^
app/controllers/info_controller.rb:6:1: C: Tab detected.
	def about
^
app/controllers/info_controller.rb:6:2: C: Use empty lines between defs.
	def about
 ^^^
app/controllers/info_controller.rb:7:1: C: Tab detected.
	end
^
app/controllers/api/v1/coli_controller.rb:1:1: C: Class definition is too long. [119/100]
class Api::V1::ColiController < ApplicationController
^^^^^
app/controllers/api/v1/coli_controller.rb:1:1: C: Missing top-level class documentation comment.
class Api::V1::ColiController < ApplicationController
^^^^^
app/controllers/api/v1/coli_controller.rb:1:7: C: Use nested module/class definitions instead of compact style.
class Api::V1::ColiController < ApplicationController
      ^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:2:1: C: Tab detected.
	# Retrieve all location data by location name.
^
app/controllers/api/v1/coli_controller.rb:3:1: C: Use 2 (not 1) spaces for indentation.
	def show
^
app/controllers/api/v1/coli_controller.rb:3:1: C: Tab detected.
	def show
^
app/controllers/api/v1/coli_controller.rb:3:2: C: Assignment Branch Condition size for show is too high. [106.5/15]
	def show
 ^^^
app/controllers/api/v1/coli_controller.rb:3:2: C: Cyclomatic complexity for show is too high. [17/6]
	def show
 ^^^
app/controllers/api/v1/coli_controller.rb:3:2: C: Method has too many lines. [116/10]
	def show
 ^^^
app/controllers/api/v1/coli_controller.rb:3:2: C: Perceived complexity for show is too high. [17/7]
	def show
 ^^^
app/controllers/api/v1/coli_controller.rb:4:1: C: Tab detected.
		# Check for the required fields, and return an appropriate message if
^^
app/controllers/api/v1/coli_controller.rb:5:1: C: Tab detected.
		# they are not present.
^^
app/controllers/api/v1/coli_controller.rb:6:1: C: Tab detected.
		unless params[:search_by].present?
^^
app/controllers/api/v1/coli_controller.rb:6:2: C: Use 2 (not 1) spaces for indentation.
		unless params[:search_by].present?
 ^
app/controllers/api/v1/coli_controller.rb:7:1: C: Tab detected.
			message = {'error' => 
^^^
app/controllers/api/v1/coli_controller.rb:7:3: C: Use 2 (not 1) spaces for indentation.
			message = {'error' => 
  ^
app/controllers/api/v1/coli_controller.rb:7:14: C: Space inside { missing.
			message = {'error' => 
             ^
app/controllers/api/v1/coli_controller.rb:7:25: C: Trailing whitespace detected.
			message = {'error' => 
                        ^
app/controllers/api/v1/coli_controller.rb:8:1: C: Tab detected.
				"The search_by field was missing. Don't forget the underscore."}
^^^^
app/controllers/api/v1/coli_controller.rb:8:68: C: Space inside } missing.
				"The search_by field was missing. Don't forget the underscore."}
                                                                   ^
app/controllers/api/v1/coli_controller.rb:9:1: C: Tab detected.
			return render json: message, status: 400
^^^
app/controllers/api/v1/coli_controller.rb:10:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:12:1: C: Tab detected.
		unless params[:objects].present?
^^
app/controllers/api/v1/coli_controller.rb:13:1: C: Tab detected.
			message = {'error' => "No objects were in the objects array."}
^^^
app/controllers/api/v1/coli_controller.rb:13:3: C: Use 2 (not 1) spaces for indentation.
			message = {'error' => "No objects were in the objects array."}
  ^
app/controllers/api/v1/coli_controller.rb:13:14: C: Space inside { missing.
			message = {'error' => "No objects were in the objects array."}
             ^
app/controllers/api/v1/coli_controller.rb:13:26: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			message = {'error' => "No objects were in the objects array."}
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:13:65: C: Space inside } missing.
			message = {'error' => "No objects were in the objects array."}
                                                                ^
app/controllers/api/v1/coli_controller.rb:14:1: C: Tab detected.
			return render json: message, status: 400
^^^
app/controllers/api/v1/coli_controller.rb:15:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:17:1: C: Tab detected.
		# The column we're searching over. Currently this is always 'location',
^^
app/controllers/api/v1/coli_controller.rb:18:1: C: Tab detected.
		# but it could change.
^^
app/controllers/api/v1/coli_controller.rb:19:1: C: Tab detected.
		column = params[:search_by]
^^
app/controllers/api/v1/coli_controller.rb:19:3: W: Useless assignment to variable - column.
		column = params[:search_by]
  ^^^^^^
app/controllers/api/v1/coli_controller.rb:21:1: C: Tab detected.
		# A hash that stores the results. This will be converted into a JSON
^^
app/controllers/api/v1/coli_controller.rb:22:1: C: Tab detected.
		# object.
^^
app/controllers/api/v1/coli_controller.rb:23:1: C: Tab detected.
		result = Hash.new
^^
app/controllers/api/v1/coli_controller.rb:23:12: C: Use hash literal {} instead of Hash.new.
		result = Hash.new
           ^^^^^^^^
app/controllers/api/v1/coli_controller.rb:25:1: C: Tab detected.
		lookup = Hash.new
^^
app/controllers/api/v1/coli_controller.rb:25:12: C: Use hash literal {} instead of Hash.new.
		lookup = Hash.new
           ^^^^^^^^
app/controllers/api/v1/coli_controller.rb:27:1: C: Tab detected.
		# Create a list of the locations that were passed in.
^^
app/controllers/api/v1/coli_controller.rb:28:1: C: Tab detected.
		locations = Array.new
^^
app/controllers/api/v1/coli_controller.rb:28:15: C: Use array literal [] instead of Array.new.
		locations = Array.new
              ^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:29:1: C: Tab detected.
		params[:objects].each do |object|
^^
app/controllers/api/v1/coli_controller.rb:30:1: C: Tab detected.
			locations << object.values[0]
^^^
app/controllers/api/v1/coli_controller.rb:30:3: C: Use 2 (not 1) spaces for indentation.
			locations << object.values[0]
  ^
app/controllers/api/v1/coli_controller.rb:31:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:33:1: C: Tab detected.
		# Create a string of the form 'location = l1 OR location = l1 OR ...'.
^^
app/controllers/api/v1/coli_controller.rb:34:1: C: Tab detected.
		where_string = ""
^^
app/controllers/api/v1/coli_controller.rb:34:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		where_string = ""
                 ^^
app/controllers/api/v1/coli_controller.rb:35:1: C: Tab detected.
		locations.each do |location|
^^
app/controllers/api/v1/coli_controller.rb:35:22: W: Unused block argument - location. You can omit the argument if you don't care about it.
		locations.each do |location|
                     ^^^^^^^^
app/controllers/api/v1/coli_controller.rb:36:1: C: Tab detected.
			#where_string += "location = '#{location}' OR "
^^^
app/controllers/api/v1/coli_controller.rb:36:4: C: Missing space after #.
			#where_string += "location = '#{location}' OR "
   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:37:1: C: Tab detected.
			where_string += 'location = ? OR '
^^^
app/controllers/api/v1/coli_controller.rb:37:3: C: Use 2 (not 1) spaces for indentation.
			where_string += 'location = ? OR '
  ^
app/controllers/api/v1/coli_controller.rb:38:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:40:1: C: Tab detected.
		# Strip off the last ' OR '.
^^
app/controllers/api/v1/coli_controller.rb:41:1: C: Tab detected.
		where_string = where_string[0..-5]
^^
app/controllers/api/v1/coli_controller.rb:43:1: C: Tab detected.
		# Query the database.
^^
app/controllers/api/v1/coli_controller.rb:44:1: C: Tab detected.
		records = Coli.joins(:weather_records)
^^
app/controllers/api/v1/coli_controller.rb:45:1: C: Tab detected.
						.select(:cost_of_living,
^^^^^^
app/controllers/api/v1/coli_controller.rb:45:7: C: Align the operands of an expression in an assignment spanning multiple lines.
						.select(:cost_of_living,
      ^^^^^^^
app/controllers/api/v1/coli_controller.rb:46:1: C: Tab detected.
								:transportation,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:46:9: C: Align the parameters of a method call if they span more than one line.
								:transportation,
        ^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:47:1: C: Tab detected.
								:groceries,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:47:9: C: Align the parameters of a method call if they span more than one line.
								:groceries,
        ^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:48:1: C: Tab detected.
								:goods,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:48:9: C: Align the parameters of a method call if they span more than one line.
								:goods,
        ^^^^^^
app/controllers/api/v1/coli_controller.rb:49:1: C: Tab detected.
								:health_care,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:49:9: C: Align the parameters of a method call if they span more than one line.
								:health_care,
        ^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:50:1: C: Tab detected.
								:utilities,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:50:9: C: Align the parameters of a method call if they span more than one line.
								:utilities,
        ^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:51:1: C: Tab detected.
								:housing,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:51:9: C: Align the parameters of a method call if they span more than one line.
								:housing,
        ^^^^^^^^
app/controllers/api/v1/coli_controller.rb:52:1: C: Tab detected.
								:location,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:52:9: C: Align the parameters of a method call if they span more than one line.
								:location,
        ^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:53:1: C: Tab detected.
								:unemp_rate,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:53:9: C: Align the parameters of a method call if they span more than one line.
								:unemp_rate,
        ^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:54:1: C: Tab detected.
								:unemp_trend,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:54:9: C: Align the parameters of a method call if they span more than one line.
								:unemp_trend,
        ^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:55:1: C: Tab detected.
								:income,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:55:9: C: Align the parameters of a method call if they span more than one line.
								:income,
        ^^^^^^^
app/controllers/api/v1/coli_controller.rb:56:1: C: Tab detected.
								:income_tax,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:56:9: C: Align the parameters of a method call if they span more than one line.
								:income_tax,
        ^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:57:1: C: Tab detected.
								:sales_tax,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:57:9: C: Align the parameters of a method call if they span more than one line.
								:sales_tax,
        ^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:58:1: C: Tab detected.
								:property_tax,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:58:9: C: Align the parameters of a method call if they span more than one line.
								:property_tax,
        ^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:59:1: C: Tab detected.
								:month,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:59:9: C: Align the parameters of a method call if they span more than one line.
								:month,
        ^^^^^^
app/controllers/api/v1/coli_controller.rb:60:1: C: Tab detected.
								:high,
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:60:9: C: Align the parameters of a method call if they span more than one line.
								:high,
        ^^^^^
app/controllers/api/v1/coli_controller.rb:61:1: C: Tab detected.
								:low)
^^^^^^^^
app/controllers/api/v1/coli_controller.rb:61:9: C: Align the parameters of a method call if they span more than one line.
								:low)
        ^^^^
app/controllers/api/v1/coli_controller.rb:62:1: C: Tab detected.
						.where([where_string, *locations])
^^^^^^
app/controllers/api/v1/coli_controller.rb:62:7: C: Align the operands of an expression in an assignment spanning multiple lines.
						.where([where_string, *locations])
      ^^^^^^
app/controllers/api/v1/coli_controller.rb:63:1: C: Tab detected.
						.order('colis.id ASC')	
^^^^^^
app/controllers/api/v1/coli_controller.rb:63:7: C: Align the operands of an expression in an assignment spanning multiple lines.
						.order('colis.id ASC')	
      ^^^^^^
app/controllers/api/v1/coli_controller.rb:63:29: C: Trailing whitespace detected.
						.order('colis.id ASC')	
                            ^
app/controllers/api/v1/coli_controller.rb:65:1: C: Tab detected.
		#result[:test] = records
^^
app/controllers/api/v1/coli_controller.rb:65:3: C: Missing space after #.
		#result[:test] = records
  ^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:67:1: C: Tab detected.
		locations.each do |location|
^^
app/controllers/api/v1/coli_controller.rb:68:1: C: Tab detected.
			records.each do |record|
^^^
app/controllers/api/v1/coli_controller.rb:68:3: C: Use 2 (not 1) spaces for indentation.
			records.each do |record|
  ^
app/controllers/api/v1/coli_controller.rb:69:1: C: Tab detected.
				if record[:location] == location then
^^^^
app/controllers/api/v1/coli_controller.rb:69:4: C: Use 2 (not 1) spaces for indentation.
				if record[:location] == location then
   ^
app/controllers/api/v1/coli_controller.rb:69:38: C: Do not use then for multi-line if.
				if record[:location] == location then
                                     ^^^^
app/controllers/api/v1/coli_controller.rb:70:1: C: Tab detected.
					lookup["#{location}"] = record
^^^^^
app/controllers/api/v1/coli_controller.rb:70:5: C: Use 2 (not 1) spaces for indentation.
					lookup["#{location}"] = record
    ^
app/controllers/api/v1/coli_controller.rb:71:1: C: Tab detected.
					break
^^^^^
app/controllers/api/v1/coli_controller.rb:72:1: C: Tab detected.
				end
^^^^
app/controllers/api/v1/coli_controller.rb:73:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:74:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:76:1: C: Tab detected.
		# Check that we found everything in the database.
^^
app/controllers/api/v1/coli_controller.rb:77:1: C: Tab detected.
		not_found = Array.new
^^
app/controllers/api/v1/coli_controller.rb:77:15: C: Use array literal [] instead of Array.new.
		not_found = Array.new
              ^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:78:1: C: Tab detected.
		locations.each do |location|
^^
app/controllers/api/v1/coli_controller.rb:79:1: C: Tab detected.
			not_found << location unless lookup["#{location}"]
^^^
app/controllers/api/v1/coli_controller.rb:79:3: C: Use 2 (not 1) spaces for indentation.
			not_found << location unless lookup["#{location}"]
  ^
app/controllers/api/v1/coli_controller.rb:80:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:81:1: C: Tab detected.
		unless not_found.empty?
^^
app/controllers/api/v1/coli_controller.rb:82:1: C: Tab detected.
			result[:failure] = 'Some objects weren\'t found in the database.'
^^^
app/controllers/api/v1/coli_controller.rb:82:3: C: Use 2 (not 1) spaces for indentation.
			result[:failure] = 'Some objects weren\'t found in the database.'
  ^
app/controllers/api/v1/coli_controller.rb:83:1: C: Tab detected.
			result[:not_found] = not_found
^^^
app/controllers/api/v1/coli_controller.rb:84:1: C: Tab detected.
			return render json: result, status: 200
^^^
app/controllers/api/v1/coli_controller.rb:85:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:87:1: C: Tab detected.
		# Store each object's data in result.
^^
app/controllers/api/v1/coli_controller.rb:88:1: C: Tab detected.
		# We'll need to both iterate over each location and keep track of their
^^
app/controllers/api/v1/coli_controller.rb:89:1: C: Tab detected.
		# indices, because that's how the view tracks them.
^^
app/controllers/api/v1/coli_controller.rb:90:1: C: Tab detected.
		i = 1
^^
app/controllers/api/v1/coli_controller.rb:91:1: C: Tab detected.
		locations.each do |location|
^^
app/controllers/api/v1/coli_controller.rb:92:1: C: Tab detected.
			# Name each location.
^^^
app/controllers/api/v1/coli_controller.rb:93:1: C: Tab detected.
			result["location_#{i}"] = location
^^^
app/controllers/api/v1/coli_controller.rb:93:3: C: Use 2 (not 1) spaces for indentation.
			result["location_#{i}"] = location
  ^
app/controllers/api/v1/coli_controller.rb:94:1: C: Tab detected.
app/controllers/api/v1/coli_controller.rb:94:1: C: Trailing whitespace detected.
app/controllers/api/v1/coli_controller.rb:95:1: C: Tab detected.
			##### ---------------- COST OF LIVING ---------------- #####
^^^
app/controllers/api/v1/coli_controller.rb:96:1: C: Tab detected.
			coli_stats = Array.new	# For formatting the eventual JSON object.
^^^
app/controllers/api/v1/coli_controller.rb:97:1: C: Tab detected.
app/controllers/api/v1/coli_controller.rb:97:1: C: Trailing whitespace detected.
app/controllers/api/v1/coli_controller.rb:98:1: C: Tab detected.
			fields = [:cost_of_living, :goods, :groceries, :health_care, 
^^^
app/controllers/api/v1/coli_controller.rb:98:64: C: Trailing whitespace detected.
			fields = [:cost_of_living, :goods, :groceries, :health_care, 
                                                               ^
app/controllers/api/v1/coli_controller.rb:99:1: C: Tab detected.
				:housing, :transportation, :utilities]
^^^^
app/controllers/api/v1/coli_controller.rb:99:5: C: Align the elements of an array literal if they span more than one line.
				:housing, :transportation, :utilities]
    ^^^^^^^^
app/controllers/api/v1/coli_controller.rb:101:1: C: Tab detected.
			# Collect the value of each non-nil field in coli_stats.
^^^
app/controllers/api/v1/coli_controller.rb:102:1: C: Tab detected.
			fields.each do |field|
^^^
app/controllers/api/v1/coli_controller.rb:103:1: C: Tab detected.
				stat = lookup["#{location}"][field]
^^^^
app/controllers/api/v1/coli_controller.rb:103:4: C: Use 2 (not 1) spaces for indentation.
				stat = lookup["#{location}"][field]
   ^
app/controllers/api/v1/coli_controller.rb:104:1: C: Tab detected.
				coli_stats << stat.to_f if stat
^^^^
app/controllers/api/v1/coli_controller.rb:105:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:107:1: C: Tab detected.
			# Add the mins and maxes.
^^^
app/controllers/api/v1/coli_controller.rb:108:1: C: Tab detected.
			unless coli_stats.empty?
^^^
app/controllers/api/v1/coli_controller.rb:109:1: C: Tab detected.
				coli_stats << coli_stats.max
^^^^
app/controllers/api/v1/coli_controller.rb:109:4: C: Use 2 (not 1) spaces for indentation.
				coli_stats << coli_stats.max
   ^
app/controllers/api/v1/coli_controller.rb:110:1: C: Tab detected.
				coli_stats << coli_stats.min
^^^^
app/controllers/api/v1/coli_controller.rb:111:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:113:1: C: Tab detected.
			# Add the data to the result.
^^^
app/controllers/api/v1/coli_controller.rb:114:1: C: Tab detected.
			result["cli_#{i}"] = coli_stats
^^^
app/controllers/api/v1/coli_controller.rb:116:1: C: Extra blank line detected.
app/controllers/api/v1/coli_controller.rb:117:1: C: Tab detected.
			##### -------------------- LABOR --------------------- #####
^^^
app/controllers/api/v1/coli_controller.rb:118:1: C: Tab detected.
			labor_stats = Array.new	# Used for formatting the eventual JSON object.
^^^
app/controllers/api/v1/coli_controller.rb:120:1: C: Tab detected.
			fields = [:unemp_trend, :income, :unemp_rate]
^^^
app/controllers/api/v1/coli_controller.rb:122:1: C: Tab detected.
			# Collect the value of each non-nil field in coli_stats.
^^^
app/controllers/api/v1/coli_controller.rb:123:1: C: Tab detected.
			fields.each do |field|
^^^
app/controllers/api/v1/coli_controller.rb:124:1: C: Tab detected.
				stat = lookup["#{location}"][field]
^^^^
app/controllers/api/v1/coli_controller.rb:124:4: C: Use 2 (not 1) spaces for indentation.
				stat = lookup["#{location}"][field]
   ^
app/controllers/api/v1/coli_controller.rb:125:1: C: Tab detected.
				labor_stats << stat.to_f if stat
^^^^
app/controllers/api/v1/coli_controller.rb:126:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:128:1: C: Tab detected.
			# Add max and min.
^^^
app/controllers/api/v1/coli_controller.rb:129:1: C: Tab detected.
			unless labor_stats.empty?
^^^
app/controllers/api/v1/coli_controller.rb:130:1: C: Tab detected.
				labor_stats << labor_stats.max
^^^^
app/controllers/api/v1/coli_controller.rb:130:4: C: Use 2 (not 1) spaces for indentation.
				labor_stats << labor_stats.max
   ^
app/controllers/api/v1/coli_controller.rb:131:1: C: Tab detected.
				labor_stats << labor_stats.min
^^^^
app/controllers/api/v1/coli_controller.rb:132:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:134:1: C: Tab detected.
			result["labor_#{i}"] = labor_stats
^^^
app/controllers/api/v1/coli_controller.rb:136:1: C: Tab detected.
app/controllers/api/v1/coli_controller.rb:136:1: C: Trailing whitespace detected.
app/controllers/api/v1/coli_controller.rb:137:1: C: Tab detected.
			##### -------------------- TAXES --------------------- #####
^^^
app/controllers/api/v1/coli_controller.rb:138:1: C: Tab detected.
			tax_stats = Array.new	# For formatting the eventual JSON object.			
^^^
app/controllers/api/v1/coli_controller.rb:138:68: C: Trailing whitespace detected.
			tax_stats = Array.new	# For formatting the eventual JSON object.			
                                                                   ^^^
app/controllers/api/v1/coli_controller.rb:140:1: C: Tab detected.
			fields = [:income_tax, :property_tax, :sales_tax]
^^^
app/controllers/api/v1/coli_controller.rb:142:1: C: Tab detected.
			# Collect the value of each non-nil field in coli_stats.
^^^
app/controllers/api/v1/coli_controller.rb:143:1: C: Tab detected.
			fields.each do |field|
^^^
app/controllers/api/v1/coli_controller.rb:144:1: C: Tab detected.
				stat = lookup["#{location}"][field]
^^^^
app/controllers/api/v1/coli_controller.rb:144:4: C: Use 2 (not 1) spaces for indentation.
				stat = lookup["#{location}"][field]
   ^
app/controllers/api/v1/coli_controller.rb:145:1: C: Tab detected.
				tax_stats << stat.to_f if stat
^^^^
app/controllers/api/v1/coli_controller.rb:146:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:148:1: C: Tab detected.
			# Add max and min.
^^^
app/controllers/api/v1/coli_controller.rb:149:1: C: Tab detected.
			unless tax_stats.empty?
^^^
app/controllers/api/v1/coli_controller.rb:150:1: C: Tab detected.
				tax_stats << tax_stats.max
^^^^
app/controllers/api/v1/coli_controller.rb:150:4: C: Use 2 (not 1) spaces for indentation.
				tax_stats << tax_stats.max
   ^
app/controllers/api/v1/coli_controller.rb:151:1: C: Tab detected.
				tax_stats << tax_stats.min
^^^^
app/controllers/api/v1/coli_controller.rb:152:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:154:1: C: Tab detected.
			result["taxes_#{i}"] = tax_stats
^^^
app/controllers/api/v1/coli_controller.rb:156:1: C: Extra blank line detected.
app/controllers/api/v1/coli_controller.rb:157:1: C: Tab detected.
			##### -------------------- WEATHER ------------------- #####
^^^
app/controllers/api/v1/coli_controller.rb:158:1: C: Tab detected.
			weather_high_stats = Array.new
^^^
app/controllers/api/v1/coli_controller.rb:159:2: C: Tab detected.
 			weather_low_stats = Array.new
 ^^^
app/controllers/api/v1/coli_controller.rb:159:5: C: Inconsistent indentation detected.
 			weather_low_stats = Array.new
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/api/v1/coli_controller.rb:161:1: C: Tab detected.
			records.each do |record|
^^^
app/controllers/api/v1/coli_controller.rb:162:1: C: Tab detected.
				if record[:location] == location then
^^^^
app/controllers/api/v1/coli_controller.rb:162:4: C: Use 2 (not 1) spaces for indentation.
				if record[:location] == location then
   ^
app/controllers/api/v1/coli_controller.rb:162:38: C: Do not use then for multi-line if.
				if record[:location] == location then
                                     ^^^^
app/controllers/api/v1/coli_controller.rb:163:1: C: Tab detected.
					weather_high_stats << record[:high].to_f if record[:high]
^^^^^
app/controllers/api/v1/coli_controller.rb:163:5: C: Use 2 (not 1) spaces for indentation.
					weather_high_stats << record[:high].to_f if record[:high]
    ^
app/controllers/api/v1/coli_controller.rb:164:1: C: Tab detected.
					weather_low_stats << record[:low].to_f if record[:low]
^^^^^
app/controllers/api/v1/coli_controller.rb:165:1: C: Tab detected.
				end
^^^^
app/controllers/api/v1/coli_controller.rb:166:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:168:1: C: Tab detected.
			# Add max and min for each list.
^^^
app/controllers/api/v1/coli_controller.rb:169:1: C: Tab detected.
			unless weather_high_stats.empty?
^^^
app/controllers/api/v1/coli_controller.rb:170:1: C: Tab detected.
				weather_high_stats << weather_high_stats.max
^^^^
app/controllers/api/v1/coli_controller.rb:170:4: C: Use 2 (not 1) spaces for indentation.
				weather_high_stats << weather_high_stats.max
   ^
app/controllers/api/v1/coli_controller.rb:171:1: C: Tab detected.
				weather_high_stats << weather_high_stats.min
^^^^
app/controllers/api/v1/coli_controller.rb:172:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:173:1: C: Tab detected.
app/controllers/api/v1/coli_controller.rb:173:1: C: Trailing whitespace detected.
app/controllers/api/v1/coli_controller.rb:174:1: C: Tab detected.
			unless weather_high_stats.empty?
^^^
app/controllers/api/v1/coli_controller.rb:175:1: C: Tab detected.
				weather_low_stats << weather_low_stats.max
^^^^
app/controllers/api/v1/coli_controller.rb:175:4: C: Use 2 (not 1) spaces for indentation.
				weather_low_stats << weather_low_stats.max
   ^
app/controllers/api/v1/coli_controller.rb:176:1: C: Tab detected.
				weather_low_stats << weather_low_stats.min
^^^^
app/controllers/api/v1/coli_controller.rb:177:1: C: Tab detected.
			end
^^^
app/controllers/api/v1/coli_controller.rb:179:1: C: Tab detected.
			result["weather_#{i}"] = weather_high_stats
^^^
app/controllers/api/v1/coli_controller.rb:180:1: C: Tab detected.
			result["weatherlow_#{i}"] = weather_low_stats
^^^
app/controllers/api/v1/coli_controller.rb:181:1: C: Tab detected.
app/controllers/api/v1/coli_controller.rb:181:1: C: Trailing whitespace detected.
app/controllers/api/v1/coli_controller.rb:182:1: C: Tab detected.
			# Increment for next object.	
^^^
app/controllers/api/v1/coli_controller.rb:182:32: C: Trailing whitespace detected.
			# Increment for next object.	
                               ^
app/controllers/api/v1/coli_controller.rb:183:1: C: Tab detected.
			i += 1
^^^
app/controllers/api/v1/coli_controller.rb:184:1: C: Tab detected.
		end
^^
app/controllers/api/v1/coli_controller.rb:186:1: C: Tab detected.
		# Return the result, formatted as JSON, and with a 200 OK HTTP code.
^^
app/controllers/api/v1/coli_controller.rb:187:1: C: Tab detected.
		render json: result, status: 200
^^
app/controllers/api/v1/coli_controller.rb:188:1: C: Tab detected.
	end
^
app/controllers/search_controller.rb:1:1: C: Missing top-level class documentation comment.
class SearchController < ApplicationController
^^^^^
app/controllers/application_controller.rb:1:1: C: Missing top-level class documentation comment.
class ApplicationController < ActionController::Base
^^^^^
app/controllers/wizard_controller.rb:1:1: C: Missing top-level class documentation comment.
class WizardController < ApplicationController
^^^^^
app/controllers/wizard_controller.rb:2:1: C: Use 2 (not 1) spaces for indentation.
	def start
^
app/controllers/wizard_controller.rb:2:1: C: Tab detected.
	def start
^
app/controllers/wizard_controller.rb:3:1: C: Tab detected.
		cookies[:skip] = "false"
^^
app/controllers/wizard_controller.rb:3:2: C: Use 2 (not 1) spaces for indentation.
		cookies[:skip] = "false"
 ^
app/controllers/wizard_controller.rb:3:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		cookies[:skip] = "false"
                   ^^^^^^^
app/controllers/wizard_controller.rb:4:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:5:1: C: Tab detected.
	def education
^
app/controllers/wizard_controller.rb:5:2: C: Use empty lines between defs.
	def education
 ^^^
app/controllers/wizard_controller.rb:6:1: C: Tab detected.
		cookies[:skip] = "false"
^^
app/controllers/wizard_controller.rb:6:2: C: Use 2 (not 1) spaces for indentation.
		cookies[:skip] = "false"
 ^
app/controllers/wizard_controller.rb:6:20: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		cookies[:skip] = "false"
                   ^^^^^^^
app/controllers/wizard_controller.rb:7:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:8:1: C: Tab detected.
	def career
^
app/controllers/wizard_controller.rb:8:2: C: Use empty lines between defs.
	def career
 ^^^
app/controllers/wizard_controller.rb:9:1: C: Tab detected.
		# if cookies[:skip] = true
^^
app/controllers/wizard_controller.rb:10:1: C: Tab detected.
		# 	@prev_link = "/wizard/major"
^^
app/controllers/wizard_controller.rb:11:1: C: Tab detected.
		# 	@prev_name = "(major)"
^^
app/controllers/wizard_controller.rb:12:1: C: Tab detected.
		# else
^^
app/controllers/wizard_controller.rb:13:1: C: Tab detected.
		# 	@prev_link = "/wizard/school"
^^
app/controllers/wizard_controller.rb:14:1: C: Tab detected.
		# 	@prev_name = "(school)"
^^
app/controllers/wizard_controller.rb:15:1: C: Tab detected.
		# end
^^
app/controllers/wizard_controller.rb:15:3: C: Incorrect indentation detected (column 2 instead of 3).
		# end
  ^^^^^
app/controllers/wizard_controller.rb:16:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:17:1: C: Tab detected.
	def city
^
app/controllers/wizard_controller.rb:17:2: C: Use empty lines between defs.
	def city
 ^^^
app/controllers/wizard_controller.rb:18:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:19:1: C: Tab detected.
	def school
^
app/controllers/wizard_controller.rb:19:2: C: Use empty lines between defs.
	def school
 ^^^
app/controllers/wizard_controller.rb:20:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:21:1: C: Tab detected.
	def major
^
app/controllers/wizard_controller.rb:21:2: C: Use empty lines between defs.
	def major
 ^^^
app/controllers/wizard_controller.rb:22:1: C: Tab detected.
		if cookies[:skip] == "true"
^^
app/controllers/wizard_controller.rb:22:2: C: Use 2 (not 1) spaces for indentation.
		if cookies[:skip] == "true"
 ^
app/controllers/wizard_controller.rb:22:24: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		if cookies[:skip] == "true"
                       ^^^^^^
app/controllers/wizard_controller.rb:23:1: C: Tab detected.
			@next_link = "/wizard/career"
^^^
app/controllers/wizard_controller.rb:23:3: C: Use 2 (not 1) spaces for indentation.
			@next_link = "/wizard/career"
  ^
app/controllers/wizard_controller.rb:23:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@next_link = "/wizard/career"
                ^^^^^^^^^^^^^^^^
app/controllers/wizard_controller.rb:24:1: C: Tab detected.
			@next_name = "(career)"
^^^
app/controllers/wizard_controller.rb:24:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@next_name = "(career)"
                ^^^^^^^^^^
app/controllers/wizard_controller.rb:25:1: C: Tab detected.
		else
^^
app/controllers/wizard_controller.rb:26:1: C: Tab detected.
			@next_link = "/wizard/school"
^^^
app/controllers/wizard_controller.rb:26:3: C: Use 2 (not 1) spaces for indentation.
			@next_link = "/wizard/school"
  ^
app/controllers/wizard_controller.rb:26:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@next_link = "/wizard/school"
                ^^^^^^^^^^^^^^^^
app/controllers/wizard_controller.rb:27:1: C: Tab detected.
			@next_name = "(school)"
^^^
app/controllers/wizard_controller.rb:27:17: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			@next_name = "(school)"
                ^^^^^^^^^^
app/controllers/wizard_controller.rb:28:1: C: Tab detected.
		end
^^
app/controllers/wizard_controller.rb:29:1: C: Tab detected.
	end
^
app/controllers/wizard_controller.rb:30:1: C: Extra empty line detected at class body end.
app/models/cost_of_living_scraper.rb:8:17: C: Use hash literal {} instead of Hash.new.
loc_to_values = Hash.new 
                ^^^^^^^^
app/models/cost_of_living_scraper.rb:8:25: C: Trailing whitespace detected.
loc_to_values = Hash.new 
                        ^
app/models/cost_of_living_scraper.rb:9:20: C: Use array literal [] instead of Array.new.
processed_states = Array.new
                   ^^^^^^^^^
app/models/cost_of_living_scraper.rb:10:16: C: Use hash literal {} instead of Hash.new.
weather_area = Hash.new
               ^^^^^^^^
app/models/cost_of_living_scraper.rb:11:11: C: Use array literal [] instead of Array.new.
columns = Array.new
          ^^^^^^^^^
app/models/cost_of_living_scraper.rb:12:10: C: Use array literal [] instead of Array.new.
cities = Array.new
         ^^^^^^^^^
app/models/cost_of_living_scraper.rb:16:81: C: Line is too long. [104/80]
#------------------- Make Sure You Set write_json val to false to push to db ---------------------------
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:23:3: C: Annotation keywords should be all upper case, followed by a colon and a space, then a note describing the problem.
# TODO update to collect data on multiple cities in a less formal matter
  ^^^^
app/models/cost_of_living_scraper.rb:24:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
         ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:22: C: Space found before comma.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                     ^
app/models/cost_of_living_scraper.rb:24:25: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                        ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:36: C: Space found before comma.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                   ^
app/models/cost_of_living_scraper.rb:24:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                      ^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:50: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                 ^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:68: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                   ^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:81: C: Line is too long. [710/80]
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:88: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                       ^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:103: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                      ^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:119: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                      ^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:136: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                       ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:149: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                    ^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:172: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                           ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:183: C: Space missing after comma.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                      ^
app/models/cost_of_living_scraper.rb:24:184: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                       ^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:201: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                        ^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:223: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                              ^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:242: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                 ^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:254: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                             ^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:266: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                         ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:280: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:293: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:312: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                       ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:325: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:339: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                  ^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:354: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                 ^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:370: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                 ^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:385: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                ^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:402: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                 ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:416: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                               ^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:435: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                  ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:449: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:465: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:476: C: Space missing after comma.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ^
app/models/cost_of_living_scraper.rb:24:477: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:491: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:508: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:522: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:540: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:553: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:567: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:581: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:24:594: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:610: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:624: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:640: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:656: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:677: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:24:700: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
areas = ["phoenix-az" , "tucson-az" , "mesa-az", "los+angeles-ca", "san+francisco-ca", "san+jose-ca", "san+diego-ca", "sacramento-ca", "denver-co", "colorado+springs-co", "aurora-co","washington-dc", "fort+lauderdale-fl", "jacksonville-fl", "miami-fl", "tampa-fl", "chicago-il", "aurora-il", "indianapolis-in", "boston-ma", "detroit-mi", "columbus-oh", "charlotte-nc", "new+york-ny", "oyster+bay-ny", "buffalo-ny", "philadelphia-pa", "memphis-tn", "nashville-tn", "austin-tx","el+paso-tx", "fort+worth-tx", "houston-tx", "san+antonio-tx", "dallas-tx", "seattle-wa", "spokane-wa", "tacoma-wa", "vancouver-wa", "madison-wi", "milwaukee-wi", "green+bay-wi", "salt+lake+city-ut", "west+valley+city-ut", "provo-ut"]

app/models/cost_of_living_scraper.rb:27:1: C: Tab detected.
	# Test Script used to play with nokogiri - pulls cost of living data from areavibes.com
^
app/models/cost_of_living_scraper.rb:27:81: C: Line is too long. [88/80]
	# Test Script used to play with nokogiri - pulls cost of living data from areavibes.com
                                                                                ^^^^^^^^
app/models/cost_of_living_scraper.rb:28:1: C: Use 2 (not 1) spaces for indentation.
	url = "http://www.areavibes.com//cost-of-living/"
^
app/models/cost_of_living_scraper.rb:28:1: C: Tab detected.
	url = "http://www.areavibes.com//cost-of-living/"
^
app/models/cost_of_living_scraper.rb:28:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	url = "http://www.areavibes.com//cost-of-living/"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:29:1: C: Tab detected.
	url.insert(25,area)
^
app/models/cost_of_living_scraper.rb:29:15: C: Space missing after comma.
	url.insert(25,area)
              ^
app/models/cost_of_living_scraper.rb:30:1: C: Tab detected.
	puts "pulling data for: "+ url + "\n"
^
app/models/cost_of_living_scraper.rb:30:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	puts "pulling data for: "+ url + "\n"
      ^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:30:27: C: Surrounding space missing for operator '+'.
	puts "pulling data for: "+ url + "\n"
                          ^
app/models/cost_of_living_scraper.rb:31:1: C: Tab detected.
	data = nil
^
app/models/cost_of_living_scraper.rb:32:1: C: Tab detected.
	begin
^
app/models/cost_of_living_scraper.rb:33:1: C: Tab detected.
		data = Nokogiri::HTML(open(url))
^^
app/models/cost_of_living_scraper.rb:33:2: C: Use 2 (not 1) spaces for indentation.
		data = Nokogiri::HTML(open(url))
 ^
app/models/cost_of_living_scraper.rb:34:1: C: Tab detected.
	rescue OpenURI::HTTPError => e
^
app/models/cost_of_living_scraper.rb:35:1: C: Tab detected.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
^^
app/models/cost_of_living_scraper.rb:35:2: C: Use 2 (not 1) spaces for indentation.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
 ^
app/models/cost_of_living_scraper.rb:35:34: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
                                 ^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:36:1: C: Tab detected.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
^^
app/models/cost_of_living_scraper.rb:36:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:36:74: C: Surrounding space missing for operator '+'.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
                                                                         ^
app/models/cost_of_living_scraper.rb:36:81: C: Line is too long. [108/80]
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:36:83: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
                                                                                  ^^^^^^^^^^
app/models/cost_of_living_scraper.rb:36:93: C: Surrounding space missing for operator '+'.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb area: "+ area + " error: "+ e.message.to_s
                                                                                            ^
app/models/cost_of_living_scraper.rb:37:1: C: Tab detected.
		File.write(log_file, error_message)
^^
app/models/cost_of_living_scraper.rb:38:1: C: Tab detected.
		# continue
^^
app/models/cost_of_living_scraper.rb:39:1: C: Tab detected.
		next
^^
app/models/cost_of_living_scraper.rb:40:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:42:1: C: Tab detected.
	table =  data.css('table.std_facts.w')
^
app/models/cost_of_living_scraper.rb:43:1: C: Tab detected.
	#headers =  index, city, state, national
^
app/models/cost_of_living_scraper.rb:43:2: C: Missing space after #.
	#headers =  index, city, state, national
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:44:1: C: Tab detected.
	state = table.css('th')[2].text
^
app/models/cost_of_living_scraper.rb:45:1: C: Tab detected.
	city = table.css('th')[1].text
^
app/models/cost_of_living_scraper.rb:47:1: C: Tab detected.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
^
app/models/cost_of_living_scraper.rb:47:12: C: Use %w or %W for array of words.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
            ^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:31: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                              ^^^^^^^
app/models/cost_of_living_scraper.rb:47:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                       ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:53: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                    ^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:68: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                                   ^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:79: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                                              ^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:81: C: Line is too long. [109/80]
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:97: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                                                                ^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:47:108: C: Space inside square brackets detected.
	columns = ["cost_of_living", "goods", "groceries", "health_care", "housing", "transportation", "utilities" ]
                                                                                                           ^
app/models/cost_of_living_scraper.rb:49:1: C: Tab detected.
	values = Array.new
^
app/models/cost_of_living_scraper.rb:50:1: C: Tab detected.
	state_values = Array.new
^
app/models/cost_of_living_scraper.rb:51:1: C: Tab detected.
	#tds = column title, city val, state val, national val
^
app/models/cost_of_living_scraper.rb:51:2: C: Missing space after #.
	#tds = column title, city val, state val, national val
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:52:1: C: Tab detected.
	table.css('tr').each do |row|
^
app/models/cost_of_living_scraper.rb:53:1: C: Tab detected.
		str = row.css('td')[1]
^^
app/models/cost_of_living_scraper.rb:53:2: C: Use 2 (not 1) spaces for indentation.
		str = row.css('td')[1]
 ^
app/models/cost_of_living_scraper.rb:54:1: C: Tab detected.
		str2 = row.css('td')[2]
^^
app/models/cost_of_living_scraper.rb:55:1: C: Tab detected.
		# check for nil
^^
app/models/cost_of_living_scraper.rb:56:1: C: Tab detected.
		if str.to_s == "" 
^^
app/models/cost_of_living_scraper.rb:56:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		if str.to_s == "" 
                 ^^
app/models/cost_of_living_scraper.rb:56:20: C: Trailing whitespace detected.
		if str.to_s == "" 
                   ^
app/models/cost_of_living_scraper.rb:57:1: C: Tab detected.
			# do nothing
^^^
app/models/cost_of_living_scraper.rb:57:4: C: Incorrect indentation detected (column 3 instead of 4).
			# do nothing
   ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:58:1: C: Tab detected.
		else
^^
app/models/cost_of_living_scraper.rb:59:1: C: Tab detected.
			# remove html tags
^^^
app/models/cost_of_living_scraper.rb:60:1: C: Tab detected.
			values.push str.text.strip
^^^
app/models/cost_of_living_scraper.rb:61:1: C: Tab detected.
			state_values.push str2.text.strip
^^^
app/models/cost_of_living_scraper.rb:62:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:63:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:65:1: C: Tab detected.
	# TODO research map! and flatten to map vals
^
app/models/cost_of_living_scraper.rb:65:4: C: Annotation keywords should be all upper case, followed by a colon and a space, then a note describing the problem.
	# TODO research map! and flatten to map vals
   ^^^^
app/models/cost_of_living_scraper.rb:66:1: C: Tab detected.
	# map city vals to columns
^
app/models/cost_of_living_scraper.rb:67:1: C: Tab detected.
	columns_to_values = Hash.new
^
app/models/cost_of_living_scraper.rb:68:1: C: Tab detected.
	columns.each_with_index do |col , x|
^
app/models/cost_of_living_scraper.rb:68:33: C: Space found before comma.
	columns.each_with_index do |col , x|
                                ^
app/models/cost_of_living_scraper.rb:69:1: C: Tab detected.
		columns_to_values[col] = values[x]
^^
app/models/cost_of_living_scraper.rb:69:2: C: Use 2 (not 1) spaces for indentation.
		columns_to_values[col] = values[x]
 ^
app/models/cost_of_living_scraper.rb:70:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:71:1: C: Tab detected.
	# include general state col in data
^
app/models/cost_of_living_scraper.rb:72:1: C: Tab detected.
	# columns_to_values[state] = state_values[0]
^
app/models/cost_of_living_scraper.rb:73:1: C: Tab detected.
	str = city
^
app/models/cost_of_living_scraper.rb:74:1: C: Tab detected.
	if write_json
^
app/models/cost_of_living_scraper.rb:74:2: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
	if write_json
 ^^
app/models/cost_of_living_scraper.rb:75:1: C: Tab detected.
		str = "location:#{city}"
^^
app/models/cost_of_living_scraper.rb:75:2: C: Use 2 (not 1) spaces for indentation.
		str = "location:#{city}"
 ^
app/models/cost_of_living_scraper.rb:76:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:77:1: C: Tab detected.
	loc_to_values[str] = columns_to_values 
^
app/models/cost_of_living_scraper.rb:77:40: C: Trailing whitespace detected.
	loc_to_values[str] = columns_to_values 
                                       ^
app/models/cost_of_living_scraper.rb:79:1: C: Tab detected.
	if processed_states.include?(state)
^
app/models/cost_of_living_scraper.rb:80:1: C: Tab detected.
		# do nothing
^^
app/models/cost_of_living_scraper.rb:80:3: C: Incorrect indentation detected (column 2 instead of 3).
		# do nothing
  ^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:81:1: C: Tab detected.
	else
^
app/models/cost_of_living_scraper.rb:82:1: C: Tab detected.
		# map state vals to columns	
^^
app/models/cost_of_living_scraper.rb:82:30: C: Trailing whitespace detected.
		# map state vals to columns	
                             ^
app/models/cost_of_living_scraper.rb:83:1: C: Tab detected.
		processed_states.push(state)
^^
app/models/cost_of_living_scraper.rb:84:1: C: Tab detected.
		columns_to_values = Hash.new
^^
app/models/cost_of_living_scraper.rb:85:1: C: Tab detected.
		columns.each_with_index do |col, x|
^^
app/models/cost_of_living_scraper.rb:86:1: C: Tab detected.
			columns_to_values[col] = state_values[x]
^^^
app/models/cost_of_living_scraper.rb:86:3: C: Use 2 (not 1) spaces for indentation.
			columns_to_values[col] = state_values[x]
  ^
app/models/cost_of_living_scraper.rb:87:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:88:1: C: Tab detected.
		str = state
^^
app/models/cost_of_living_scraper.rb:89:1: C: Tab detected.
		if write_json
^^
app/models/cost_of_living_scraper.rb:89:3: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
		if write_json
  ^^
app/models/cost_of_living_scraper.rb:90:1: C: Tab detected.
			str = "location':'#{state}"
^^^
app/models/cost_of_living_scraper.rb:90:3: C: Use 2 (not 1) spaces for indentation.
			str = "location':'#{state}"
  ^
app/models/cost_of_living_scraper.rb:91:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:92:1: C: Tab detected.
		loc_to_values[str] = columns_to_values
^^
app/models/cost_of_living_scraper.rb:93:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:95:1: C: Tab detected.
	#-------------------Weather Data ----------------------------------
^
app/models/cost_of_living_scraper.rb:96:1: C: Tab detected.
	# Test Script used to play with nokogiri - pulls cost of living data from areavibes.com
^
app/models/cost_of_living_scraper.rb:96:81: C: Line is too long. [88/80]
	# Test Script used to play with nokogiri - pulls cost of living data from areavibes.com
                                                                                ^^^^^^^^
app/models/cost_of_living_scraper.rb:97:1: C: Tab detected.
	url = "http://www.areavibes.com//weather/"
^
app/models/cost_of_living_scraper.rb:97:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	url = "http://www.areavibes.com//weather/"
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:98:1: C: Tab detected.
	url.insert(25,area)
^
app/models/cost_of_living_scraper.rb:98:15: C: Space missing after comma.
	url.insert(25,area)
              ^
app/models/cost_of_living_scraper.rb:99:1: C: Tab detected.
	puts "pulling data for: "+ url + "\n"
^
app/models/cost_of_living_scraper.rb:99:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	puts "pulling data for: "+ url + "\n"
      ^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:99:27: C: Surrounding space missing for operator '+'.
	puts "pulling data for: "+ url + "\n"
                          ^
app/models/cost_of_living_scraper.rb:100:1: C: Tab detected.
	data = nil
^
app/models/cost_of_living_scraper.rb:101:1: C: Tab detected.
app/models/cost_of_living_scraper.rb:101:1: C: Trailing whitespace detected.
app/models/cost_of_living_scraper.rb:102:1: C: Tab detected.
	begin
^
app/models/cost_of_living_scraper.rb:103:1: C: Tab detected.
		data = Nokogiri::HTML(open(url))
^^
app/models/cost_of_living_scraper.rb:103:2: C: Use 2 (not 1) spaces for indentation.
		data = Nokogiri::HTML(open(url))
 ^
app/models/cost_of_living_scraper.rb:104:1: C: Tab detected.
	rescue OpenURI::HTTPError => e
^
app/models/cost_of_living_scraper.rb:105:1: C: Tab detected.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
^^
app/models/cost_of_living_scraper.rb:105:2: C: Use 2 (not 1) spaces for indentation.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
 ^
app/models/cost_of_living_scraper.rb:105:34: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		log_file = Pathname.pwd.to_s + "/data/error_logs"
                                 ^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:106:1: C: Tab detected.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
^^
app/models/cost_of_living_scraper.rb:106:39: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:106:77: C: Surrounding space missing for operator '+'.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
                                                                            ^
app/models/cost_of_living_scraper.rb:106:81: C: Line is too long. [111/80]
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:106:86: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
                                                                                     ^^^^^^^^^^
app/models/cost_of_living_scraper.rb:106:96: C: Surrounding space missing for operator '+'.
		error_message = DateTime.now.to_s + " Cost_of_living_scraper.rb weather: "+ area + " error: "+ e.message.to_s
                                                                                               ^
app/models/cost_of_living_scraper.rb:107:1: C: Tab detected.
		File.write(log_file, error_message)
^^
app/models/cost_of_living_scraper.rb:108:1: C: Tab detected.
		# continue
^^
app/models/cost_of_living_scraper.rb:109:1: C: Tab detected.
		next
^^
app/models/cost_of_living_scraper.rb:110:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:112:1: C: Tab detected.
	month_data = Hash.new
^
app/models/cost_of_living_scraper.rb:113:1: C: Tab detected.
	table =  data.css('table.std_facts.w')
^
app/models/cost_of_living_scraper.rb:114:1: C: Tab detected.
app/models/cost_of_living_scraper.rb:114:1: C: Trailing whitespace detected.
app/models/cost_of_living_scraper.rb:115:1: C: Tab detected.
	count = 0
^
app/models/cost_of_living_scraper.rb:116:1: C: Tab detected.
	#tds = month, min, max, avg, precip
^
app/models/cost_of_living_scraper.rb:116:2: C: Missing space after #.
	#tds = month, min, max, avg, precip
 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:117:1: C: Tab detected.
	table.css('tr').each do |row|
^
app/models/cost_of_living_scraper.rb:118:1: C: Tab detected.
		month = row.css('td')[0]
^^
app/models/cost_of_living_scraper.rb:118:2: C: Use 2 (not 1) spaces for indentation.
		month = row.css('td')[0]
 ^
app/models/cost_of_living_scraper.rb:119:1: C: Tab detected.
		min = row.css('td')[1]
^^
app/models/cost_of_living_scraper.rb:120:1: C: Tab detected.
		max = row.css('td')[2]
^^
app/models/cost_of_living_scraper.rb:121:1: C: Tab detected.
		avg = row.css('td')[3]
^^
app/models/cost_of_living_scraper.rb:122:1: C: Tab detected.
		precip = row.css('td')[4]
^^
app/models/cost_of_living_scraper.rb:124:1: C: Tab detected.
		# check for nil 
^^
app/models/cost_of_living_scraper.rb:124:18: C: Trailing whitespace detected.
		# check for nil 
                 ^
app/models/cost_of_living_scraper.rb:125:1: C: Tab detected.
		if month.nil? || min.nil? || max.nil? || avg.nil? || precip.nil?
^^
app/models/cost_of_living_scraper.rb:126:1: C: Tab detected.
			# do nothing
^^^
app/models/cost_of_living_scraper.rb:127:1: C: Tab detected.
			# puts "do nothing block"
^^^
app/models/cost_of_living_scraper.rb:127:4: C: Incorrect indentation detected (column 3 instead of 4).
			# puts "do nothing block"
   ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:128:1: C: Tab detected.
		elsif count > 11
^^
app/models/cost_of_living_scraper.rb:129:1: C: Tab detected.
			# ignore air qual and pollution index
^^^
app/models/cost_of_living_scraper.rb:130:1: C: Tab detected.
			# puts "overcount"		
^^^
app/models/cost_of_living_scraper.rb:130:4: C: Incorrect indentation detected (column 3 instead of 4).
			# puts "overcount"		
   ^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:130:22: C: Trailing whitespace detected.
			# puts "overcount"		
                     ^^
app/models/cost_of_living_scraper.rb:131:1: C: Tab detected.
		else
^^
app/models/cost_of_living_scraper.rb:132:1: C: Tab detected.
			values = Array.new
^^^
app/models/cost_of_living_scraper.rb:133:1: C: Tab detected.
			# remove html tags
^^^
app/models/cost_of_living_scraper.rb:134:1: C: Tab detected.
			month = month.text.strip
^^^
app/models/cost_of_living_scraper.rb:135:1: C: Tab detected.
			values.push min.text.strip.slice 0..-3
^^^
app/models/cost_of_living_scraper.rb:136:1: C: Tab detected.
			values.push max.text.strip.slice 0..-3
^^^
app/models/cost_of_living_scraper.rb:137:1: C: Tab detected.
			values.push avg.text.strip.slice 0..-3
^^^
app/models/cost_of_living_scraper.rb:139:1: C: Tab detected.
			month_data[month] = values
^^^
app/models/cost_of_living_scraper.rb:140:1: C: Tab detected.
			count = count + 1
^^^
app/models/cost_of_living_scraper.rb:140:4: C: Use self-assignment shorthand +=.
			count = count + 1
   ^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:141:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:142:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:144:1: C: Extra blank line detected.
app/models/cost_of_living_scraper.rb:145:1: C: Tab detected.
	if !cities.include?(city)
^
app/models/cost_of_living_scraper.rb:145:2: C: Favor modifier if usage when having a single-line body. Another good alternative is the usage of control flow &&/||.
	if !cities.include?(city)
 ^^
app/models/cost_of_living_scraper.rb:145:2: C: Favor unless over if for negative conditions.
	if !cities.include?(city)
 ^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:146:1: C: Tab detected.
		cities.push city
^^
app/models/cost_of_living_scraper.rb:146:2: C: Use 2 (not 1) spaces for indentation.
		cities.push city
 ^
app/models/cost_of_living_scraper.rb:147:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:148:1: C: Tab detected.
	weather_area[city] = month_data 
^
app/models/cost_of_living_scraper.rb:148:33: C: Trailing whitespace detected.
	weather_area[city] = month_data 
                                ^
app/models/cost_of_living_scraper.rb:149:1: C: Extra empty line detected at block body end.
app/models/cost_of_living_scraper.rb:153:1: C: Tab detected.
	# -------------------- Write Json ---------------------------
^
app/models/cost_of_living_scraper.rb:154:1: C: Tab detected.
	# store_vals
^
app/models/cost_of_living_scraper.rb:155:1: C: Use 2 (not 1) spaces for indentation.
	col_file = Pathname.pwd.to_s + "/data/col.json"
^
app/models/cost_of_living_scraper.rb:155:1: C: Tab detected.
	col_file = Pathname.pwd.to_s + "/data/col.json"
^
app/models/cost_of_living_scraper.rb:155:33: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	col_file = Pathname.pwd.to_s + "/data/col.json"
                                ^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:156:1: C: Tab detected.
	# col_state_file = Pathname.pwd.to_s + "/data/col_state.json"
^
app/models/cost_of_living_scraper.rb:157:1: C: Tab detected.
	js = loc_to_values.to_json
^
app/models/cost_of_living_scraper.rb:158:1: C: Tab detected.
	File.write(col_file, js)
^
app/models/cost_of_living_scraper.rb:161:1: C: Tab detected.
	# ------------------ Database init ----------------------------------
^
app/models/cost_of_living_scraper.rb:163:1: C: Tab detected.
	# ------------------ Database Code COL -------------------------------
^
app/models/cost_of_living_scraper.rb:165:1: C: Use 2 (not 1) spaces for indentation.
	store_vals = Hash.new
^
app/models/cost_of_living_scraper.rb:165:1: C: Tab detected.
	store_vals = Hash.new
^
app/models/cost_of_living_scraper.rb:165:15: C: Use hash literal {} instead of Hash.new.
	store_vals = Hash.new
              ^^^^^^^^
app/models/cost_of_living_scraper.rb:166:1: C: Tab detected.
	table_name = "colis"
^
app/models/cost_of_living_scraper.rb:166:15: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	table_name = "colis"
              ^^^^^^^
app/models/cost_of_living_scraper.rb:167:1: C: Tab detected.
	store_vals[table_name] = loc_to_values
^
app/models/cost_of_living_scraper.rb:168:1: C: Tab detected.
	curr_loc = " "
^
app/models/cost_of_living_scraper.rb:168:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	curr_loc = " "
            ^^^
app/models/cost_of_living_scraper.rb:169:1: C: Tab detected.
	col = " "
^
app/models/cost_of_living_scraper.rb:169:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	col = " "
       ^^^
app/models/cost_of_living_scraper.rb:170:1: C: Tab detected.
	goods = " "
^
app/models/cost_of_living_scraper.rb:170:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	goods = " "
         ^^^
app/models/cost_of_living_scraper.rb:171:1: C: Tab detected.
	groc = " "
^
app/models/cost_of_living_scraper.rb:171:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	groc = " "
        ^^^
app/models/cost_of_living_scraper.rb:172:1: C: Tab detected.
	hc = " "
^
app/models/cost_of_living_scraper.rb:172:7: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	hc = " "
      ^^^
app/models/cost_of_living_scraper.rb:173:1: C: Tab detected.
	housing = " "
^
app/models/cost_of_living_scraper.rb:173:12: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	housing = " "
           ^^^
app/models/cost_of_living_scraper.rb:174:1: C: Tab detected.
	trans = " "
^
app/models/cost_of_living_scraper.rb:174:10: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	trans = " "
         ^^^
app/models/cost_of_living_scraper.rb:175:1: C: Tab detected.
	util = " "
^
app/models/cost_of_living_scraper.rb:175:9: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	util = " "
        ^^^
app/models/cost_of_living_scraper.rb:177:1: C: Tab detected.
	store_vals[table_name].each do |loc|
^
app/models/cost_of_living_scraper.rb:178:1: C: Tab detected.
		curr_loc =  loc[0].to_s
^^
app/models/cost_of_living_scraper.rb:178:2: C: Use 2 (not 1) spaces for indentation.
		curr_loc =  loc[0].to_s
 ^
app/models/cost_of_living_scraper.rb:179:1: C: Tab detected.
		loc_data =loc_to_values[curr_loc]
^^
app/models/cost_of_living_scraper.rb:179:12: C: Surrounding space missing for operator '='.
		loc_data =loc_to_values[curr_loc]
           ^
app/models/cost_of_living_scraper.rb:180:1: C: Tab detected.
		col = loc_data[columns[0]]
^^
app/models/cost_of_living_scraper.rb:181:1: C: Tab detected.
		goods = loc_data[columns[1]]
^^
app/models/cost_of_living_scraper.rb:182:1: C: Tab detected.
		groc = loc_data[columns[2]]
^^
app/models/cost_of_living_scraper.rb:183:1: C: Tab detected.
		hc = loc_data[columns[3]]
^^
app/models/cost_of_living_scraper.rb:184:1: C: Tab detected.
		housing = loc_data[columns[4]]
^^
app/models/cost_of_living_scraper.rb:185:1: C: Tab detected.
		trans = loc_data[columns[5]]
^^
app/models/cost_of_living_scraper.rb:186:1: C: Tab detected.
		util = loc_data[columns[6]]
^^
app/models/cost_of_living_scraper.rb:187:1: C: Tab detected.
		Coli.find_or_create_by(cost_of_living: col, transportation: trans, groceries: groc, goods: goods, health_care: hc, utilities: util, location: curr_loc, housing: housing)
^^
app/models/cost_of_living_scraper.rb:187:81: C: Line is too long. [171/80]
		Coli.find_or_create_by(cost_of_living: col, transportation: trans, groceries: groc, goods: goods, health_care: hc, utilities: util, location: curr_loc, housing: housing)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:188:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:190:1: C: Extra blank line detected.
app/models/cost_of_living_scraper.rb:191:1: C: Tab detected.
	# --------------- Database Code weather_reports ------------------------- 
^
app/models/cost_of_living_scraper.rb:191:75: C: Trailing whitespace detected.
	# --------------- Database Code weather_reports ------------------------- 
                                                                          ^
app/models/cost_of_living_scraper.rb:193:1: C: Tab detected.
	cities.each do |city|
^
app/models/cost_of_living_scraper.rb:193:9: C: Use next to skip iteration.
	cities.each do |city|
        ^^^^
app/models/cost_of_living_scraper.rb:194:1: C: Tab detected.
		# get id
^^
app/models/cost_of_living_scraper.rb:195:1: C: Tab detected.
		results = Coli.find_by(location: city)
^^
app/models/cost_of_living_scraper.rb:195:2: C: Use 2 (not 1) spaces for indentation.
		results = Coli.find_by(location: city)
 ^
app/models/cost_of_living_scraper.rb:196:1: C: Tab detected.
		id = nil
^^
app/models/cost_of_living_scraper.rb:197:1: C: Tab detected.
		results.each do |row|
^^
app/models/cost_of_living_scraper.rb:198:1: C: Tab detected.
			id = row["id"]
^^^
app/models/cost_of_living_scraper.rb:198:3: C: Use 2 (not 1) spaces for indentation.
			id = row["id"]
  ^
app/models/cost_of_living_scraper.rb:198:13: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
			id = row["id"]
            ^^^^
app/models/cost_of_living_scraper.rb:199:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:201:1: C: Tab detected.
		if id != nil
^^
app/models/cost_of_living_scraper.rb:201:9: C: Prefer !expression.nil? over expression != nil.
		if id != nil
        ^^
app/models/cost_of_living_scraper.rb:202:1: C: Tab detected.
			# iterate through months and push data to db
^^^
app/models/cost_of_living_scraper.rb:203:1: C: Tab detected.
			weather_area[city].each do |months|
^^^
app/models/cost_of_living_scraper.rb:203:3: C: Use 2 (not 1) spaces for indentation.
			weather_area[city].each do |months|
  ^
app/models/cost_of_living_scraper.rb:204:1: C: Tab detected.
				# get month
^^^^
app/models/cost_of_living_scraper.rb:205:1: C: Tab detected.
				curr_month = months[0]
^^^^
app/models/cost_of_living_scraper.rb:205:4: C: Use 2 (not 1) spaces for indentation.
				curr_month = months[0]
   ^
app/models/cost_of_living_scraper.rb:206:1: C: Tab detected.
				# get values
^^^^
app/models/cost_of_living_scraper.rb:207:1: C: Tab detected.
				arr_vals = months[1]
^^^^
app/models/cost_of_living_scraper.rb:208:1: C: Tab detected.
				min = arr_vals[0]
^^^^
app/models/cost_of_living_scraper.rb:209:1: C: Tab detected.
				max = arr_vals[1]
^^^^
app/models/cost_of_living_scraper.rb:210:1: C: Tab detected.
				avg = arr_vals[2]
^^^^
app/models/cost_of_living_scraper.rb:211:1: C: Tab detected.
				WeatherRecord.find_or_create_by(high: max, low: min, average: avg, coli_id: id, month: curr_month)
^^^^
app/models/cost_of_living_scraper.rb:211:81: C: Line is too long. [102/80]
				WeatherRecord.find_or_create_by(high: max, low: min, average: avg, coli_id: id, month: curr_month)
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
app/models/cost_of_living_scraper.rb:212:1: C: Tab detected.
			end
^^^
app/models/cost_of_living_scraper.rb:213:1: C: Tab detected.
		end
^^
app/models/cost_of_living_scraper.rb:214:1: C: Tab detected.
	end
^
app/models/cost_of_living_scraper.rb:215:4: C: Final newline missing.
end
   
app/models/completed.rb:1:1: C: Missing top-level class documentation comment.
class Completed < ActiveRecord::Base
^^^^^
app/models/user.rb:1:1: C: Missing top-level class documentation comment.
class User < ActiveRecord::Base
^^^^^
app/models/scalar.rb:1:1: C: Missing top-level class documentation comment.
class Scalar < ActiveRecord::Base
^^^^^
app/models/weather_record.rb:1:1: C: Missing top-level class documentation comment.
class WeatherRecord < ActiveRecord::Base
^^^^^
app/models/query.rb:1:1: C: Missing top-level class documentation comment.
class Query < ActiveRecord::Base
^^^^^
app/models/coli.rb:1:1: C: Missing top-level class documentation comment.
class Coli < ActiveRecord::Base
^^^^^
app/helpers/info_helper.rb:1:1: C: Missing top-level module documentation comment.
module InfoHelper
^^^^^^
app/helpers/search_helper.rb:1:1: C: Missing top-level module documentation comment.
module SearchHelper
^^^^^^
app/helpers/api/v1/coli_helper.rb:1:1: C: Missing top-level module documentation comment.
module Api::V1::ColiHelper
^^^^^^
app/helpers/api/v1/coli_helper.rb:1:8: C: Use nested module/class definitions instead of compact style.
module Api::V1::ColiHelper
       ^^^^^^^^^^^^^^^^^^^
app/helpers/user_helper.rb:1:1: C: Missing top-level module documentation comment.
module UserHelper
^^^^^^
app/helpers/application_helper.rb:1:1: C: Missing top-level module documentation comment.
module ApplicationHelper
^^^^^^
app/helpers/wizard_helper.rb:1:1: C: Missing top-level module documentation comment.
module WizardHelper
^^^^^^
test/controllers/api/v1/coli_controller_test.rb:3:7: C: Use nested module/class definitions instead of compact style.
class Api::V1::ColiControllerTest < ActionController::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
test/controllers/search_controller_test.rb:3:1: C: Missing top-level class documentation comment.
class SearchControllerTest < ActionController::TestCase
^^^^^
test/controllers/search_controller_test.rb:4:8: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  test "should get index" do
       ^^^^^^^^^^^^^^^^^^
test/controllers/search_controller_test.rb:8:1: C: Extra empty line detected at class body end.
test/test_helper.rb:5:1: C: Missing top-level class documentation comment.
class ActiveSupport::TestCase
^^^^^
test/test_helper.rb:5:7: C: Use nested module/class definitions instead of compact style.
class ActiveSupport::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^
test/test_helper.rb:6:81: C: Line is too long. [82/80]
  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
                                                                                ^^
test/helpers/api/v1/coli_helper_test.rb:3:7: C: Use nested module/class definitions instead of compact style.
class Api::V1::ColiHelperTest < ActionView::TestCase
      ^^^^^^^^^^^^^^^^^^^^^^^

99 files inspected, 869 offenses detected
