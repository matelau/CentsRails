{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "Title was not specified"
  },
  "paths": {
    "/users/new": {
      "get": {
        "responses": {
          "200": {
            "description": "The form was returned."
          }
        },
        "description": "",
        "summary": "Redirects to a form that registers new users.",
        "operationId": "Api::V2::UsersController#register"
      }
    },
    "/users": {
      "post": {
        "responses": {
          "200": {
            "description": "User was registered."
          },
          "400": {
            "description": "The user data didn't meet the requirements."
          }
        },
        "description": "",
        "summary": "Registers a new user.",
        "operationId": "Api::V2::UsersController#create",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of career objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User_body"
            }
          }
        ]
      }
    },
    "/users/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "There is a user with that ID."
          },
          "404": {
            "description": "There is no user with that ID."
          }
        },
        "description": "",
        "summary": "Gets profile data for a user.",
        "operationId": "Api::V2::UsersController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "description": "object with password field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Password_body"
            }
          }
        ]
      }
    },
    "/users/validate": {
      "post": {
        "responses": {
          "200": {
            "description": "Authentication successful."
          },
          "400": {
            "description": "Authentication failed."
          }
        },
        "description": "",
        "summary": "Validate a username and password.",
        "operationId": "Api::V2::UsersController#validate",
        "parameters": [
          {
            "in": "body",
            "description": "object with password field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Validate_body"
            }
          }
        ]
      }
    },
    "/users/{id}/completed": {
      "post": {
        "responses": {
          "200": {
            "description": "User was found."
          },
          "404": {
            "description": "No such user was found."
          }
        },
        "description": "",
        "summary": "Record that a user has completed a section.",
        "operationId": "Api::V2::UserController#create_completed",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          },
          {
            "in": "body",
            "description": "object with section field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Completed_body"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown": {
      "get": {
        "responses": {
          "200": {
            "description": "User was found."
          },
          "404": {
            "description": "No such user ID was found."
          }
        },
        "description": "",
        "summary": "Loads all spending breakdown data for a user.",
        "operationId": "Api::V2::SpendingBreakdownController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown/{category}": {
      "patch": {
        "responses": {
          "200": {
            "description": "Data was deleted."
          },
          "400": {
            "description": "Each field object must have a name and value."
          },
          "404": {
            "description": "No such user was found."
          },
          "500": {
            "description": "Server error while saving."
          }
        },
        "description": "",
        "summary": "Saves new spending breakdown data.",
        "operationId": "Api::V2::SpendingBreakdownController#update",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          },
          {
            "in": "path",
            "description": "default, student or custom",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "object with array of spending breakdown data",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SB_body"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown/{category}/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Data was deleted."
          }
        },
        "description": "",
        "summary": "Deletes a single spending breakdown item.",
        "operationId": "Api::V2::SpendingBreakdownController#destroy",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          },
          {
            "in": "path",
            "description": "default, student or custom",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "the name of the spending breakdown item",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "host": "trycents.com",
  "basePath": "/api/v2",
  "schemes": [
    "http"
  ],
  "definitions": {
    "User_body": {
      "id": "User_body",
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "type": "string"
        },
        "email_type": {
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "password",
        "password_confirmation",
        "email_type"
      ]
    },
    "Validate_body": {
      "required": [
        "email",
        "password"
      ],
      "id": "Validate_body",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Password_body": {
      "required": [
        "password"
      ],
      "id": "Password_body",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "Validate_response": {
      "id": "Validate_response",
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "SB_body": {
      "id": "SB_body",
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      },
      "required": [
        "fields"
      ]
    },
    "Field": {
      "required": [
        "name",
        "amount"
      ],
      "id": "Field",
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "integer"
        }
      }
    },
    "Completed_body": {
      "id": "Completed_body",
      "type": "object",
      "properties": {
        "section": {
          "type": "string"
        }
      },
      "required": [
        "section"
      ]
    }
  }
}