{
  "swagger": "2.0",
  "info": {
    "title": "Cents API",
    "description": "An API to examine the impact of your financial decisions",
    "version": "2.0"
  },
  "paths": {
    "/careers": {
      "post": {
      	"description": "something",
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "400": {
            "description": "No careers were in the careers array."
          },
          "404": {
            "description": "No data on some schools."
          }
        },
        "description": "",
        "summary": "Returns data on two careers.",
        "operationId": "Api::V2::CareersController#show_two",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of career objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Career_body"
            }
          }
        ]
      }
    },
    "/careers/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "School does not exist."
          }
        },
        "description": "",
        "summary": "Returns data for a career.",
        "operationId": "Api::V2::CareersController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a career name",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/cost_of_living": {
      "post": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "400": {
            "description": "No objects were in the locations array."
          },
          "404": {
            "description": "No data on city or state for some locations."
          }
        },
        "description": "",
        "summary": "Returns cost of living information for two locations.",
        "operationId": "Api::V2::Coli#show_two",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of location objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cost_of_living_body"
            }
          }
        ]
      }
    },
    "/cost_of_living/{state}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "State does not exist."
          }
        },
        "description": "",
        "summary": "Returns information on all available locations for a state.",
        "operationId": "Api::V2::Coli#show_state",
        "parameters": [
          {
            "in": "path",
            "description": "a US state",
            "name": "state",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/cost_of_living/{state}/{city}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "State or city does not exist."
          }
        },
        "description": "",
        "summary": "Returns cost of living information for a city.",
        "operationId": "Api::V2::Coli#show_city",
        "parameters": [
          {
            "in": "path",
            "description": "a US state name",
            "name": "state",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "the name of a city in the state",
            "name": "city",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/degrees": {
      "post": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "400": {
            "description": "No objects were in the degrees array."
          },
          "404": {
            "description": "No data for some degrees."
          }
        },
        "description": "",
        "summary": "Returns degree information for two degrees.",
        "operationId": "Api::V2::DegreesController#show_two",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of degree objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Degree_body"
            }
          }
        ]
      }
    },
    "/degrees/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "Degree does not exist."
          }
        },
        "description": "",
        "summary": "Returns information on all degrees of all levels with that name.",
        "operationId": "Api::V2::DegreesController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a degree name",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/degrees/{level}/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "Degree does not exist."
          }
        },
        "description": "",
        "summary": "Returns information on all degrees of all levels that start with {level} and have the name {name}.",
        "operationId": "Api::V2::DegreesController#show_level_name",
        "parameters": [
          {
            "in": "path",
            "description": "a degree level",
            "name": "level",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "a degree name",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/users/new": {
      "get": {
        "responses": {
          "200": {
            "description": "The form was returned."
          }
        },
        "description": "",
        "summary": "Redirects to a form that registers new users.",
        "operationId": "Api::V2::UsersController#register"
      }
    },
    "/users": {
      "post": {
        "responses": {
          "200": {
            "description": "User was registered."
          },
          "400": {
            "description": "The user data didn't meet the requirements."
          }
        },
        "description": "",
        "summary": "Registers a new user.",
        "operationId": "Api::V2::UsersController#create",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of career objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User_body"
            }
          }
        ]
      }
    },
    "/users/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "There is a user with that ID."
          },
          "404": {
            "description": "There is no user with that ID."
          }
        },
        "description": "",
        "summary": "Gets profile data for a user.",
        "operationId": "Api::V2::UsersController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "description": "object with password field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Password_body"
            }
          }
        ]
      }
    },
    "/users/validate": {
      "post": {
        "responses": {
          "200": {
            "description": "Authentication successful."
          },
          "400": {
            "description": "Authentication failed."
          }
        },
        "description": "",
        "summary": "Validate a username and password.",
        "operationId": "Api::V2::UsersController#validate",
        "parameters": [
          {
            "in": "body",
            "description": "object with password field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Validate_body"
            }
          }
        ]
      }
    },
    "/users/{id}/completed": {
      "post": {
        "responses": {
          "200": {
            "description": "User was found."
          },
          "404": {
            "description": "No such user was found."
          }
        },
        "description": "",
        "summary": "Record that a user has completed a section.",
        "operationId": "Api::V2::UserController#create_completed",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "description": "object with section field",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Completed_body"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown": {
      "get": {
        "responses": {
          "200": {
            "description": "User was found."
          },
          "404": {
            "description": "No such user ID was found."
          }
        },
        "description": "",
        "summary": "Loads all spending breakdown data for a user.",
        "operationId": "Api::V2::SpendingBreakdownController#show",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown/{category}": {
      "patch": {
        "responses": {
          "200": {
            "description": "Data was deleted."
          },
          "400": {
            "description": "Each field object must have a name and value."
          },
          "404": {
            "description": "No such user was found."
          },
          "500": {
            "description": "Server error while saving."
          }
        },
        "description": "",
        "summary": "Saves new spending breakdown data.",
        "operationId": "Api::V2::SpendingBreakdownController#update",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          },
          {
            "in": "path",
            "description": "default, student or custom",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "description": "object with array of spending breakdown data",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SB_body"
            }
          }
        ]
      }
    },
    "/users/{id}/spending_breakdown/{category}/{name}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Data was deleted."
          }
        },
        "description": "",
        "summary": "Deletes a single spending breakdown item.",
        "operationId": "Api::V2::SpendingBreakdownController#destroy",
        "parameters": [
          {
            "in": "path",
            "description": "a user id",
            "name": "id",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integer"
            }
          },
          {
            "in": "path",
            "description": "default, student or custom",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "description": "the name of the spending breakdown item",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/schools": {
      "post": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "400": {
            "description": "No schools were in the schools array."
          },
          "404": {
            "description": "No data on some schools."
          }
        },
        "description": "",
        "summary": "Returns data on two schools.",
        "operationId": "Api::V2::SchoolsController#show_two",
        "parameters": [
          {
            "in": "body",
            "description": "object with array of school objects and optional operation",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/School_body"
            }
          }
        ]
      }
    },
    "/schools/location/{location}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "Location does not exist."
          }
        },
        "description": "",
        "summary": "Returns information on all available schools for a location.",
        "operationId": "Api::V2::SchoolsController#show_location",
        "parameters": [
          {
            "in": "path",
            "description": "city or postal abbreviation for state in the US",
            "name": "location",
            "required": true,
            "type": "string",
            "default": "Princeton, NJ"
          }
        ]
      }
    },
    "/schools/{name}": {
      "get": {
        "responses": {
          "200": {
            "description": "Records were found."
          },
          "404": {
            "description": "School does not exist."
          }
        },
        "description": "",
        "summary": "Returns data for a school.",
        "operationId": "Api::V2::SchoolsController#show_state_name",
        "parameters": [
          {
            "in": "path",
            "description": "a school name",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ]
      }
    }
  },
  "host": "trycents.com",
  "basePath": "/api/v2",
  "schemes": [
    "http"
  ],
  "definitions": {
    "Career_body": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "careers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Career"
          }
        }
      },
      "required": [
        "careers"
      ]
    },
    "Career": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "Cost_of_living_body": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Location"
          }
        }
      },
      "required": [
        "locations"
      ]
    },
    "Location": {
      "required": [
        "city",
        "state"
      ],
      "properties": {
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "Degree_body": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "degrees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Degree"
          }
        }
      },
      "required": [
        "degrees"
      ]
    },
    "Degree": {
      "required": [
        "name",
        "level"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "level": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "User_body": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_confirmation": {
          "type": "string"
        },
        "email_type": {
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "password",
        "password_confirmation",
        "email_type"
      ]
    },
    "Validate_body": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Password_body": {
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "Validate_response": {
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "SB_body": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      },
      "required": [
        "fields"
      ]
    },
    "Field": {
      "required": [
        "name",
        "amount"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "integer"
        }
      }
    },
    "Completed_body": {
      "type": "object",
      "properties": {
        "section": {
          "type": "string"
        }
      },
      "required": [
        "section"
      ]
    },
    "School_body": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string"
        },
        "schools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/School"
          }
        }
      },
      "required": [
        "schools"
      ]
    },
    "School": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    }
  }
}
