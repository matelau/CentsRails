
<%= form_for(:user, html: { class: "form-horizontal", 'id' => 'register-form'}) do |f| %>
<div style="text-align:center" id="stylized" class="myform" >
	<h2>Create a free account today.</h2><br>

			<label>FIRST NAME
			<span class="small">Only letters allowed.</span>
			</label>
			<%= f.text_field :first_name, html: {'placeholder' => "", class: "input-xlarge"} %>
			<label id="user_first_name-error" class="error" for="user_first_name"></label>

			<label>LAST NAME
			<span class="small">Only letters allowed.</span>
			</label>
			<%= f.text_field :last_name, html: {'placeholder' => "", class: "input-xlarge"} %>
			<label id="user_last_name-error" class="error" for="user_last_name"></label>

			<label>EMAIL
			<span class="small">Enter a valid address.</span>
			</label>
			<%= f.email_field :email, html: {'placeholder' => '', class: 'input-xlarge'} %>
			<label id="user_email-error" class="error" for="user_email"></label>

			<label>PASSWORD
			<span class="small">Must be at least 6 characters.</span>
			</label>
			<%= f.password_field :password, html: {'placeholder' => "", class: "input-xlarge"} %>
			<label id="user_password-error" class="error" for="user_password"></label>

			<label>PASSWORD (CONFIRM)
			<span class="small">Must match password above.</span>
			</label>
			<%= f.password_field :password_confirmation, html: {'placeholder' => "", class: "input-xlarge"} %>
			<label id="user_password_confirmation-error" class="error" for="user_password_confirmation"></label>

<% ['HTML', 'text'].each do |type| %>
	<%= f.radio_button :email_type, type, checked: type == 'HTML', class: "radio" %>
	<%= label_tag "email_type_html[#{type}]", type %>
<% end %>

<%= check_box_tag :terms %>
<%= label_tag :terms, "I accept the terms and conditions" %>

		<button style="margin-top:20px" class="btn btn-primary">REGISTER</button>

</div>


<% end %>

 
<!--include jQuery Validation Plugin-->
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.min.js"></script>


<script>

			$("#register-form").validate(
			{
					onfocusout: function(element, event) {
						this.element(element);
					},
					success: function(label)
					{
						label.text("");
					},

					// Set the requirements for the fields here.
					rules: {
						"user[first_name]": {
							required: true,
							lettersonly: true
						},
						"user[last_name]": {
							required: true,
							lettersonly: true
						},
						"user[email]": {
							required: true,
							email: true
						},
						"user[password]": {
							required: true,
							minlength: 6
						},
						"user[password_confirmation]": {
							required: true,
							minlength: 6,
							equalTo: "#user_password"
						},
						"terms": {
							required: true
						}
					},
					
					// Set the error message here.
					messages: {
						"user[first_name]": {
							required: "Required",
							lettersonly: "First name can only contain letters."
						},
						"user[last_name]": {
							required: "Required",
							lettersonly: "Last name can only contain letters."
						},
						"user[password]": {
							required: "Required",
							minlength: "Must be at least 6 characters long."
						},
						"user[email]": {
							required: "Required",
							email: "Enter a valid email address."
						},
						"user[password_confirmation]": {
							required: "Required",
							equalTo: "Password must match.",
							minlength: "Must be at least 6 characters long."
						},
						"terms": "You must accept the terms and conditions to have an account."
					},
					submitHandler: function(form) {
						form.submit();
					}
				});
			
		
			$("#register-form").valid();

</script>